// Copyright Epic Games, Inc. All Rights Reserved.

/*=============================================================================
	VulkanCommon.ush: Common Vulkan shader code
=============================================================================*/

// Update this GUID to improve shader recompilation for Vulkan only shaders
// GUID = 62c2037f-178e-46d1-9de1-f107cb1d1d39

#pragma once


#define COMPILER_SUPPORTS_ULONG_TYPES 1
#define COMPILER_SUPPORTS_UINT64_IMAGE_ATOMICS (1 && COMPILER_SUPPORTS_ULONG_TYPES)

#if COMPILER_SUPPORTS_ULONG_TYPES

#define UlongType uint64_t

UlongType PackUlongType(uint2 Value)
{
	return ((UlongType)Value.y << 32) | Value.x;
}

uint2 UnpackUlongType(UlongType Value)
{
	return uint2(uint(Value), uint(Value >> 32));
}

#endif

#if COMPILER_SUPPORTS_UINT64_IMAGE_ATOMICS
void ImageInterlockedMaxUInt64(RWTexture2D<UlongType> Dest, uint2 Coord, UlongType Value)
{
	InterlockedMax(Dest[Coord], Value);
}
#endif

#if PLATFORM_SUPPORTS_BINDLESS
	// While we use descriptor indexing, declare unbounded resource arrays
	COMPILER_DEFINE VULKAN_HEAP_NAME(Prefix, Type) Prefix##Type
	COMPILER_DEFINE VULKAN_SAMPLER_HEAP(Type) VULKAN_HEAP_NAME(VULKAN_BINDLESS_SAMPLER_ARRAY_PREFIX,Type)
	COMPILER_DEFINE VULKAN_RESOURCE_HEAP(Type) VULKAN_HEAP_NAME(VULKAN_BINDLESS_RESOURCE_ARRAY_PREFIX,Type)

	// todo-jn: bindless resource heaps
	COMPILER_DEFINE GetResourceFromHeap(Type, Index) VULKAN_RESOURCE_HEAP(Type)[Index]

	// bindless sampler heaps (specify a register so AUTO_BINDLESS macros aren't applied on them)
	SamplerState VULKAN_SAMPLER_HEAP(SamplerState)[] : register(s0, space1000);
	SamplerComparisonState VULKAN_SAMPLER_HEAP(SamplerComparisonState)[] : register(s0, space1000);
	COMPILER_DEFINE GetSamplerFromHeap(Type, Index) VULKAN_SAMPLER_HEAP(Type)[Index]
#endif
