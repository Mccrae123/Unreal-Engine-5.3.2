// Copyright Epic Games, Inc. All Rights Reserved.

/*=============================================================================
	MetalCommon.usf: Common Metal shader code
=============================================================================*/

// Update this GUID to improve shader recompilation for Metal only shaders
>>>> ORIGINAL //UE4/Main/Engine/Shaders/Public/Platform/Metal/MetalCommon.ush#20
// GUID = 61EFF606-B5F2-42D6-9A48-9AD5E2E3BC55
==== THEIRS //UE4/Main/Engine/Shaders/Public/Platform/Metal/MetalCommon.ush#22
// GUID = 03B3D368-6D07-43AF-9EF6-3FAC517881D5
==== YOURS //Juan.Canada_RPS/Engine/Shaders/Public/Platform/Metal/MetalCommon.ush
// GUID = 616bd504-f38f-4c3a-83a8-fbb074511c78
<<<<

#pragma once

#if VERTEXSHADER && HULLSHADER
#ifndef TESSELLATIONSHADER
#define TESSELLATIONSHADER 1
#endif
#endif

#define STRONG_TYPE
#define StrongTypedBuffer Buffer

/* Too many bugs to enable wave-intrinsics just yet, but we are getting there.
#if ((MAX_SHADER_LANGUAGE_VERSION >= 3 && COMPUTESHADER) || (MAX_SHADER_LANGUAGE_VERSION >= 4 && PIXELSHADER))
#define COMPILER_SUPPORTS_WAVE_ONCE 1
#define COMPILER_SUPPORTS_WAVE_VOTE 1
#define COMPILER_SUPPORTS_WAVE_MINMAX 1
#define COMPILER_SUPPORTS_WAVE_BIT_ORAND 1
#endif
*/

#define COMPILER_SUPPORTS_MINMAX3 0

#if IOS
#if COMPILER_HLSLCC > 1
#if PIXELSHADER
 	Texture2D<float4> gl_LastFragData;
	#define FramebufferFetchES2() gl_LastFragData.Load(uint3(0,0,0),0)
#else
	#define FramebufferFetchES2() float4(0,0,0,0)
#endif
#endif
#endif
