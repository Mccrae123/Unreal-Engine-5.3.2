// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.

/*=============================================================================
	HeightFogPixelShader.usf: Scene fogging pixel shader.
=============================================================================*/

#include "Common.usf"
#include "SHCommon.usf"
#include "HeightFogCommon.usf"

Texture2D OcclusionTexture;
SamplerState OcclusionSampler;

void ExponentialPixelMain(
	float2 TexCoord : TEXCOORD0,
	float3 ScreenVector : TEXCOORD1,
	float4 SVPos : SV_POSITION,
	out float4 OutColor : SV_Target0
	)
{ 
	float SceneDepth = CalcSceneDepth(TexCoord);

	if (VRProjectionIsActive())
	{
		// Recalculate ScreenVector per-pixel, remapping multi-res UVs to corresponding linear UVs
		// @todo: Could be done in the vertex shader, by constructing a mesh that's split to match the
		// multi-res viewports.
		float4 LinearSvPos = SvPositionToLinearSvPosition(SVPos);
		ScreenVector.xyz = mul(float4(LinearSvPos.xy, 1, 1), View.SVPositionToTranslatedWorld).xyz;
	}

	float3 WorldPositionRelativeToCamera = ScreenVector.xyz * SceneDepth;

	float LightShaftMask = Texture2DSample(OcclusionTexture, OcclusionSampler, TexCoord).x;
	float4 ExponentialFog = GetExponentialHeightFog(WorldPositionRelativeToCamera);
	OutColor = RETURN_COLOR(float4(ExponentialFog.rgb * LightShaftMask, ExponentialFog.w));
}
