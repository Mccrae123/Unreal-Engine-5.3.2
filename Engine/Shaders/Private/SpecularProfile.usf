// Copyright Epic Games, Inc. All Rights Reserved.

#include "Common.ush"

float3 ViewColor;
float3 LightColor;

int2 SourceResolution;
uint SourceMipCount;
int2 TargetResolution;
uint TargetIndex;
SamplerState SourceSampler;
Texture2D<float4> SourceTexture;
RWTexture2DArray<float4> TargetTexture;

[numthreads(8, 8, 1)]
void MainCS(uint3 DispatchThreadId : SV_DispatchThreadID)
{
	const uint2 PixelPos = DispatchThreadId.xy;
	if (all(PixelPos < uint2(TargetResolution)))
	{
		const float2 TexCoord = float2(PixelPos + 0.5f) / float2(TargetResolution);
		#if PERMUTATION_PROCEDURAL
		{
			const float NoL = TexCoord.y;
			const float NoV = TexCoord.x;

			const float3 DefaultColor = 1.f;
			const float3 C0 = lerp(DefaultColor, ViewColor, NoV);
			const float3 C1 = lerp(DefaultColor, LightColor, NoL);
			TargetTexture[uint3(PixelPos,TargetIndex)] = float4(C0 * C1, 1);
		}
		#else
		{
			const float SourceMip = clamp(log2(SourceResolution) - log2(TargetResolution), 0.f, SourceMipCount-1);
			const float4 Value = SourceTexture.SampleLevel(SourceSampler, TexCoord, SourceMip);
			TargetTexture[uint3(PixelPos,TargetIndex)] = Value;
		}
		#endif
	}
}