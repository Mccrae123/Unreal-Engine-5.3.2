// Copyright Epic Games, Inc. All Rights Reserved.

/*=============================================================================================
PathTracingLambert.usf: Lambertian BRDF sampling functions 
===============================================================================================*/
#pragma once

FMaterialSample Lambert_SampleMaterial(
	FMaterialClosestHitPayload Payload,
	float4 RandSample)
{
	float3 N_World = GetWorldNormal(Payload);

	float4 SampledValue = CosineSampleHemisphere(RandSample.xy);

	return CreateMaterialSample(TangentToWorld(SampledValue.xyz, N_World), GetBaseColor(Payload), SampledValue.w, 1.0, 1.0);
}

float Lambert_Pdf(float3 OutgoingDirection, FMaterialClosestHitPayload Payload)
{
	float3 N_World = GetWorldNormal(Payload);
	float NoL = saturate(dot(N_World, OutgoingDirection));
	return NoL / PI;
}

FMaterialEval Lambert_EvalMaterial(
	float3 OutgoingDirection,
	FMaterialClosestHitPayload Payload
)
{
	float3 N_World = GetWorldNormal(Payload);
	float NoL = saturate(dot(N_World, OutgoingDirection));

	return CreateMaterialEval(GetBaseColor(Payload), NoL / PI);
}
