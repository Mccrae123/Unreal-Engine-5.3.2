// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.

/*=============================================================================
	ModifiedWBoundaryMask.usf: VS and GS for drawing ModifiedW boundary mask
=============================================================================*/
#include "common.ush"

// The draw call itself will be two triangles, so simply look up values in the vertex/index constant arrays
void VSMain(in uint InVertexId : SV_VertexID,
	out float4 OutPosition : SV_Position)
{
	int x = InVertexId &  1;
	int y = InVertexId >> 1;

	OutPosition = float4(x * 2 - 1, y * 2 - 1, 0, 1);
}

// Simple FastGS to just broadcast to all viewports
struct FFastGSOutput
{
	float4		Position : SV_Position;
	uint		ViewportMask : SV_ViewportArrayIndex;
};

[maxvertexcount(1)]
void FGSMain(triangle float4 InVertices[3] : SV_Position, inout TriangleStream<FFastGSOutput> OutTriStream)
{
	FFastGSOutput Output;
	Output.Position = InVertices[0];
	Output.ViewportMask = 0xF; // we assume that Lens Matched Shading uses four viewports
	OutTriStream.Append(Output);
}
