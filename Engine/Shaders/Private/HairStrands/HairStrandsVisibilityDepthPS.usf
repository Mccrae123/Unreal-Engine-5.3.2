// Copyright 1998-2019 Epic Games, Inc. All Rights Reserved.

#include "../Common.ush"

#include "../SceneTexturesCommon.ush"
#include "HairStrandsDeepShadowCommon.ush"
#include "../DeferredShadingCommon.ush"
#include "HairStrandsVisibilityCommon.ush"

Texture2DMS<float, HAIR_VISIBILITY_MAXSAMPLECOUNT> HairVisibilityDepthTexture;

#if PERMUTATION_COVERAGE == 1
Texture2D<float> CoverageTexture;
#endif

void MainPS(
	in FScreenVertexOutput Input,
	out float SvDepth		: SV_Depth,
	out float4  OutGBufferB	: SV_Target0,
	out float4 OutColor		: SV_Target1
)
{
	float MaxDepth = 0;
	float MinDepth = 1;
	const uint2 PixelCoord = floor(Input.Position.xy);
	uint ValidSampleCount = 0;
	for (uint SampleIt=0; SampleIt<HAIR_VISIBILITY_MAXSAMPLECOUNT; ++SampleIt)
	{
		const float SampleDepth = HairVisibilityDepthTexture.Load(PixelCoord, SampleIt).x;
		MinDepth = min(MinDepth, SampleDepth);
		MaxDepth = max(MaxDepth, SampleDepth);
		const bool bIsValid = SampleDepth > 0;
		ValidSampleCount += bIsValid ? 1 : 0;
	}

	if (ValidSampleCount < HAIR_VISIBILITY_MAXSAMPLECOUNT
#if PERMUTATION_COVERAGE == 1
		|| CoverageTexture.Load(uint3(PixelCoord, 0))<1.0f
#endif
		)
		discard;

	SvDepth = MinDepth;
	OutGBufferB = 0;
	OutColor = 0;
}


