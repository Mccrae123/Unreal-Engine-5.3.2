// Copyright Epic Games, Inc. All Rights Reserved.

//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class FDatasmithFacadeMasterMaterial : FDatasmithFacadeBaseMaterial {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FDatasmithFacadeMasterMaterial(global::System.IntPtr cPtr, bool cMemoryOwn) : base(DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMasterMaterial_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FDatasmithFacadeMasterMaterial obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          DatasmithFacadeCSharpPINVOKE.delete_FDatasmithFacadeMasterMaterial(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public FDatasmithFacadeMasterMaterial(string InElementName) : this(DatasmithFacadeCSharpPINVOKE.new_FDatasmithFacadeMasterMaterial(InElementName), true) {
  }

  public override FDatasmithFacadeBaseMaterial.EFacadeMaterialType GetMaterialType() {
    FDatasmithFacadeBaseMaterial.EFacadeMaterialType ret = (FDatasmithFacadeBaseMaterial.EFacadeMaterialType)DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMasterMaterial_GetMaterialType(swigCPtr);
    return ret;
  }

  public void SetMasterMaterialType(FDatasmithFacadeMasterMaterial.EMasterMaterialType InMasterMaterialType) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMasterMaterial_SetMasterMaterialType(swigCPtr, (int)InMasterMaterialType);
  }

  public void AddColor(string InPropertyName, byte InR, byte InG, byte InB, byte InA) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMasterMaterial_AddColor__SWIG_0(swigCPtr, InPropertyName, InR, InG, InB, InA);
  }

  public void AddColor(string InPropertyName, float InR, float InG, float InB, float InA) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMasterMaterial_AddColor__SWIG_1(swigCPtr, InPropertyName, InR, InG, InB, InA);
  }

  public void AddTexture(string InPropertyName, string InTextureFilePath, FDatasmithFacadeTexture.ETextureMode InTextureMode) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMasterMaterial_AddTexture__SWIG_0(swigCPtr, InPropertyName, InTextureFilePath, (int)InTextureMode);
  }

  public void AddTexture(string InPropertyName, string InTextureFilePath) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMasterMaterial_AddTexture__SWIG_1(swigCPtr, InPropertyName, InTextureFilePath);
  }

  public void AddString(string InPropertyName, string InPropertyValue) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMasterMaterial_AddString(swigCPtr, InPropertyName, InPropertyValue);
  }

  public void AddFloat(string InPropertyName, float InPropertyValue) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMasterMaterial_AddFloat(swigCPtr, InPropertyName, InPropertyValue);
  }

  public void AddBoolean(string InPropertyName, bool bInPropertyValue) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMasterMaterial_AddBoolean(swigCPtr, InPropertyName, bInPropertyValue);
  }

  public enum EMasterMaterialType {
    Opaque,
    Transparent,
    CutOut
  }

}
