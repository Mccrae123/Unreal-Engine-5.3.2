// Copyright 1998-2018 Epic Games, Inc. All Rights Reserved.

#include "PS4/PS4PlatformInput.h"
#include <libime/ime_keycode.h>
#include <system_service.h>

uint32 FPS4PlatformInput::GetKeyMap(uint32* KeyCodes, FString* KeyNames, uint32 MaxMappings)
{
#define ADDKEYMAP(KeyCode, KeyName)		if (NumMappings<MaxMappings) { KeyCodes[NumMappings]=KeyCode; KeyNames[NumMappings]=KeyName; ++NumMappings; };

	uint32 NumMappings = 0;

	if (KeyCodes && KeyNames && (MaxMappings > 0))
	{
		// set up the basic printable character mapping
//		NumMappings += FGenericPlatformApplicationMisc::GetStandardPrintableKeyMap(KeyCodes, KeyNames, MaxMappings, true, false);

		ADDKEYMAP(SCE_IME_KEYCODE_CAPSLOCK,				TEXT("CapsLock"));
		ADDKEYMAP(SCE_IME_KEYCODE_F1,					TEXT("F1"));
		ADDKEYMAP(SCE_IME_KEYCODE_F2,					TEXT("F2"));
		ADDKEYMAP(SCE_IME_KEYCODE_F3,					TEXT("F3"));
		ADDKEYMAP(SCE_IME_KEYCODE_F4,					TEXT("F4"));
		ADDKEYMAP(SCE_IME_KEYCODE_F5,					TEXT("F5"));
		ADDKEYMAP(SCE_IME_KEYCODE_F6,					TEXT("F6"));
		ADDKEYMAP(SCE_IME_KEYCODE_F7,					TEXT("F7"));
		ADDKEYMAP(SCE_IME_KEYCODE_F8,					TEXT("F8"));
		ADDKEYMAP(SCE_IME_KEYCODE_F9,					TEXT("F9"));
		ADDKEYMAP(SCE_IME_KEYCODE_F10,					TEXT("F10"));
		ADDKEYMAP(SCE_IME_KEYCODE_F11,					TEXT("F11"));
		ADDKEYMAP(SCE_IME_KEYCODE_F12,					TEXT("F12"));
//		ADDKEYMAP(SCE_IME_KEYCODE_PRINTSCREEN,			TEXT("PrintScreen"));
		ADDKEYMAP(SCE_IME_KEYCODE_SCROLLLOCK,			TEXT("ScrollLock"));
		ADDKEYMAP(SCE_IME_KEYCODE_PAUSE,				TEXT("Pause"));
		ADDKEYMAP(SCE_IME_KEYCODE_INSERT,				TEXT("Insert"));
		ADDKEYMAP(SCE_IME_KEYCODE_HOME,					TEXT("Home"));
		ADDKEYMAP(SCE_IME_KEYCODE_PAGEUP,				TEXT("PageUp"));
		ADDKEYMAP(SCE_IME_KEYCODE_DELETE,				TEXT("Delete"));
		ADDKEYMAP(SCE_IME_KEYCODE_END,					TEXT("End"));
		ADDKEYMAP(SCE_IME_KEYCODE_PAGEDOWN,				TEXT("PageDown"));
		ADDKEYMAP(SCE_IME_KEYCODE_RIGHTARROW,			TEXT("Right"));
		ADDKEYMAP(SCE_IME_KEYCODE_LEFTARROW,			TEXT("Left"));
		ADDKEYMAP(SCE_IME_KEYCODE_DOWNARROW,			TEXT("Down"));
		ADDKEYMAP(SCE_IME_KEYCODE_UPARROW,				TEXT("Up"));
		ADDKEYMAP(SCE_IME_KEYCODE_LOCKING_NUMLOCK,		TEXT("NumLock"));
//		ADDKEYMAP(SCE_IME_KEYCODE_APPLICATION,			TEXT("Application"));
		ADDKEYMAP(SCE_IME_KEYCODE_A,					TEXT("A"));
		ADDKEYMAP(SCE_IME_KEYCODE_B,					TEXT("B"));
		ADDKEYMAP(SCE_IME_KEYCODE_C,					TEXT("C"));
		ADDKEYMAP(SCE_IME_KEYCODE_D,					TEXT("D"));
		ADDKEYMAP(SCE_IME_KEYCODE_E,					TEXT("E"));
		ADDKEYMAP(SCE_IME_KEYCODE_F,					TEXT("F"));
		ADDKEYMAP(SCE_IME_KEYCODE_G,					TEXT("G"));
		ADDKEYMAP(SCE_IME_KEYCODE_H,					TEXT("H"));
		ADDKEYMAP(SCE_IME_KEYCODE_I,					TEXT("I"));
		ADDKEYMAP(SCE_IME_KEYCODE_J,					TEXT("J"));
		ADDKEYMAP(SCE_IME_KEYCODE_K,					TEXT("K"));
		ADDKEYMAP(SCE_IME_KEYCODE_L,					TEXT("L"));
		ADDKEYMAP(SCE_IME_KEYCODE_M,					TEXT("M"));
		ADDKEYMAP(SCE_IME_KEYCODE_N,					TEXT("N"));
		ADDKEYMAP(SCE_IME_KEYCODE_O,					TEXT("O"));
		ADDKEYMAP(SCE_IME_KEYCODE_P,					TEXT("P"));
		ADDKEYMAP(SCE_IME_KEYCODE_Q,					TEXT("Q"));
		ADDKEYMAP(SCE_IME_KEYCODE_R,					TEXT("R"));
		ADDKEYMAP(SCE_IME_KEYCODE_S,					TEXT("S"));
		ADDKEYMAP(SCE_IME_KEYCODE_T,					TEXT("T"));
		ADDKEYMAP(SCE_IME_KEYCODE_U,					TEXT("U"));
		ADDKEYMAP(SCE_IME_KEYCODE_V,					TEXT("V"));
		ADDKEYMAP(SCE_IME_KEYCODE_W,					TEXT("W"));
		ADDKEYMAP(SCE_IME_KEYCODE_X,					TEXT("X"));
		ADDKEYMAP(SCE_IME_KEYCODE_Y,					TEXT("Y"));
		ADDKEYMAP(SCE_IME_KEYCODE_Z,					TEXT("Z"));
		ADDKEYMAP(SCE_IME_KEYCODE_1,					TEXT("One"));
		ADDKEYMAP(SCE_IME_KEYCODE_2,					TEXT("Two"));
		ADDKEYMAP(SCE_IME_KEYCODE_3,					TEXT("Three"));
		ADDKEYMAP(SCE_IME_KEYCODE_4,					TEXT("Four"));
		ADDKEYMAP(SCE_IME_KEYCODE_5,					TEXT("Five"));
		ADDKEYMAP(SCE_IME_KEYCODE_6,					TEXT("Six"));
		ADDKEYMAP(SCE_IME_KEYCODE_7,					TEXT("Seven"));
		ADDKEYMAP(SCE_IME_KEYCODE_8,					TEXT("Eight"));
		ADDKEYMAP(SCE_IME_KEYCODE_9,					TEXT("Nine"));
		ADDKEYMAP(SCE_IME_KEYCODE_0,					TEXT("Zero"));
		ADDKEYMAP(SCE_IME_KEYCODE_RETURN,				TEXT("Enter"));
		ADDKEYMAP(SCE_IME_KEYCODE_ESCAPE,				TEXT("Escape"));
		ADDKEYMAP(SCE_IME_KEYCODE_BACKSPACE,			TEXT("BackSpace"));
		ADDKEYMAP(SCE_IME_KEYCODE_TAB,					TEXT("Tab"));
		ADDKEYMAP(SCE_IME_KEYCODE_SPACEBAR,				TEXT("SpaceBar"));
		ADDKEYMAP(SCE_IME_KEYCODE_MINUS,				TEXT("Underscore"));
		ADDKEYMAP(SCE_IME_KEYCODE_EQUAL,				TEXT("Equals"));
		ADDKEYMAP(SCE_IME_KEYCODE_LEFTBRACKET,			TEXT("LeftBracket"));
		ADDKEYMAP(SCE_IME_KEYCODE_RIGHTBRACKET,			TEXT("RightBracket"));
		ADDKEYMAP(SCE_IME_KEYCODE_BACKSLASH,			TEXT("BackSlash"));
		ADDKEYMAP(SCE_IME_KEYCODE_SEMICOLON,			TEXT("Semicolon"));
		ADDKEYMAP(SCE_IME_KEYCODE_SINGLEQUOTE,			TEXT("Apostrophe"));
		ADDKEYMAP(SCE_IME_KEYCODE_COMMA,				TEXT("Comma"));
		ADDKEYMAP(SCE_IME_KEYCODE_PERIOD,				TEXT("Period"));
		ADDKEYMAP(SCE_IME_KEYCODE_SLASH,				TEXT("Slash"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_NUMLOCK,		TEXT("NumLock"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_SLASH,			TEXT("Divide"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_ASTERISK,		TEXT("Multiply"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_MINUS,			TEXT("Subtract"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_PLUS,			TEXT("Add"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_ENTER,			TEXT("Enter"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_1,				TEXT("NumPadOne"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_2,				TEXT("NumPadTwo"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_3,				TEXT("NumPadThree"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_4,				TEXT("NumPadFour"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_5,				TEXT("NumPadFive"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_6,				TEXT("NumPadSix"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_7,				TEXT("NumPadSeven"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_8,				TEXT("NumPadEight"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_9,				TEXT("NumPadNine"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_0,				TEXT("NumPadZero"));
		ADDKEYMAP(SCE_IME_KEYCODE_KEYPAD_PERIOD,		TEXT("Decimal"));
		ADDKEYMAP(SCE_IME_KEYCODE_BACKQUOTE,			TEXT("Tilde"));
		ADDKEYMAP(SCE_IME_KEYCODE_LEFTSHIFT,			TEXT("LeftShift"));
		ADDKEYMAP(SCE_IME_KEYCODE_RIGHTSHIFT,			TEXT("RightShift"));
		ADDKEYMAP(SCE_IME_KEYCODE_LEFTCONTROL,			TEXT("LeftControl"));
		ADDKEYMAP(SCE_IME_KEYCODE_RIGHTCONTROL,			TEXT("RightControl"));
		ADDKEYMAP(SCE_IME_KEYCODE_LEFTALT,				TEXT("LeftAlt"));
		ADDKEYMAP(SCE_IME_KEYCODE_RIGHTALT,				TEXT("RightAlt"));
	}
#undef ADDKEYMAP

	return NumMappings;
}

FKey FPS4PlatformInput::GetGamepadAcceptKey()
{
	int32 GetButtonAssignment;
	int32 Ret = sceSystemServiceParamGetInt(SCE_SYSTEM_SERVICE_PARAM_ID_ENTER_BUTTON_ASSIGN, &GetButtonAssignment);
	checkf(Ret == SCE_OK, TEXT("sceSystemServiceParamGetInt(SCE_SYSTEM_SERVICE_PARAM_ID_ENTER_BUTTON_ASSIGN) failed: 0x%x"), Ret);

	return GetButtonAssignment == SCE_SYSTEM_PARAM_ENTER_BUTTON_ASSIGN_CIRCLE ? EKeys::Gamepad_FaceButton_Right : EKeys::Gamepad_FaceButton_Bottom;

}

FKey FPS4PlatformInput::GetGamepadBackKey()
{
	int32 GetButtonAssignment;
	int32 Ret = sceSystemServiceParamGetInt(SCE_SYSTEM_SERVICE_PARAM_ID_ENTER_BUTTON_ASSIGN, &GetButtonAssignment);
	checkf(Ret == SCE_OK, TEXT("sceSystemServiceParamGetInt(SCE_SYSTEM_SERVICE_PARAM_ID_ENTER_BUTTON_ASSIGN) failed: 0x%x"), Ret);

	return GetButtonAssignment == SCE_SYSTEM_PARAM_ENTER_BUTTON_ASSIGN_CIRCLE ? EKeys::Gamepad_FaceButton_Bottom : EKeys::Gamepad_FaceButton_Right;
}
