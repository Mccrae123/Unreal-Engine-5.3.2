// Copyright Epic Games, Inc. All Rights Reserved.

#include "/Plugin/ComputeFramework/Private/ComputeKernelCommon.ush"

uint DI_LOCAL(NumVertices);
uint DI_LOCAL(InputStreamStart);
uint DI_LOCAL(MaxConnectedVertexCount);
Buffer<uint> DI_LOCAL(ConnectivityBuffer);

DI_IMPL_READ(ReadNumVertices, uint, void)
{
	return DI_LOCAL(NumVertices);
}

DI_IMPL_READ(ReadNumConnectedVertices, uint, uint VertexIndex)
{
	return DI_LOCAL(MaxConnectedVertexCount);
}

DI_IMPL_READ(ReadConnectedVertex, uint, uint VertexIndex, uint ConnectedVertexSubIndex)
{
	uint BaseIndex = (DI_LOCAL(InputStreamStart) + VertexIndex) * DI_LOCAL(MaxConnectedVertexCount);
	uint ConnectedVertexIndex = DI_LOCAL(ConnectivityBuffer)[BaseIndex + ConnectedVertexSubIndex];
	uint BaseOffset = ConnectedVertexIndex == 0xFFFFFFFF ? 0 : DI_LOCAL(InputStreamStart);
	return ConnectedVertexIndex - BaseOffset;
}
