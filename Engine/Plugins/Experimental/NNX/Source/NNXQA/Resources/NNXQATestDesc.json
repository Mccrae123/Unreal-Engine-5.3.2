{
	"$schema": "./NNXQATestDescSchema.json",
	"model_test_categories": [
		{
			"category": "OnnxZoo",
			"is_model_test": true,
			"targets": [
				{
					"target": "resnet50-v2-7",
					"tags": [ "SmokeTest" ],
					"runtimes": [
						{ "name": "NNXRuntimeORTDml", "relative_error": 1.0 },
						{ "name": "NNXRuntimeHlsl",	"skip": true, "comment": "Model with multiple layer not yet implemented."	},
						{ "name": "NNXRuntimeDml",  "skip": true, "comment": "Model with multiple layer not yet implemented." }
					]
				},
				{
					"target": "Mosaic-9",
					"tags": [ "SmokeTest" ],
					"runtimes": [
						{ "name": "NNXRuntimeORTDml", "absolute_error": 5e-2, "relative_error": 50.0,
							"comment": "Worst relative error 43.367836 % (epsilon 0.001000 %) at position 112558, got -0.003391 expected -0.002365. TODO we need an automatic balance between relative error and absolute error"
						},
						{ "name": "NNXRuntimeORTCpu", "absolute_error": 1e-3, "relative_error": 3.0 },
						{ "name": "NNXRuntimeHlsl",	"skip": true, "comment": "Model with multiple layer not yet implemented."	},
						{ "name": "NNXRuntimeDml",  "skip": true, "comment": "Model with multiple layer not yet implemented." }
					]
				}
			]
		},
		{
			"category": "InHouse",
			"is_model_test": true,
			"targets": [
				{
					"target": "NeuralMorphModel_global",
					"tags": [ "SmokeTest" ],
					"runtimes": [
						{ "name": "NNXRuntimeORTDml", "relative_error": 0.02 },
						{ "name": "NNXRuntimeHlsl",	"skip": true, "comment": "Model with multiple layer not yet implemented."	},
						{ "name": "NNXRuntimeDml",  "skip": true, "comment": "Model with multiple layer not yet implemented." }
					]
				},
				{
					"target": "NeuralMorphModel_Local",
					"tags": [ "SmokeTest" ],
					"runtimes": [
						{ "name": "NNXRuntimeORTDml", "relative_error": 0.04 },
						{ "name": "NNXRuntimeHlsl",	"skip": true, "comment": "Model with multiple layer not yet implemented."	},
						{ "name": "NNXRuntimeDml",  "skip": true, "comment": "Model with multiple layer not yet implemented." }
					]
				},
				{
					"target": "VertexDeltaModel",
					"runtimes": [
						{ "name": "NNXRuntimeORTDml", "absolute_error": 1e-4, "relative_error": 10.0,
							"comment": "TODO check, relative error is very high."
						},
						{ "name": "NNXRuntimeHlsl",	"skip": true, "comment": "Model with multiple layer not yet implemented."	},
						{ "name": "NNXRuntimeDml",  "skip": true, "comment": "Model with multiple layer not yet implemented." }
					]
				}
			]
		}
	],

	"operator_test_categories": [
		{
			"category": "Elementwise.Unary",
			"targets": [
				{	"target": "Abs", "additional_datasets": [ "Elementwise.Slow.OneInput" ]},
				{	"target": "Acos", "tags": [ "SmokeTest" ], "runtimes": [
						{ "name": "NNXRuntimeORTDml", "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeDml",    "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeHlsl",   "absolute_error":  2e-4, "relative_error": 0.03}
					]},
				{	"target": "Acosh" },
				{	"target": "Asin", "runtimes": [
						{ "name": "NNXRuntimeORTDml", "absolute_error":  1e-4, "relative_error": 2.5},
						{ "name": "NNXRuntimeDml",    "absolute_error":  1e-4, "relative_error": 2.5},
						{ "name": "NNXRuntimeHlsl",   "absolute_error":  2e-4, "relative_error": 2.5}
					]},
				{	"target": "Asinh", "runtimes": [
						{ "name": "NNXRuntimeORTDml", "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeDml",    "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeHlsl",   "absolute_error":  1e-4, "relative_error": 0.03}
					]},
				{	"target": "Atan", "runtimes": [
						{ "name": "NNXRuntimeORTDml", "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeDml",    "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeHlsl",   "absolute_error":  1.5e-3, "relative_error": 0.3}
					]},
				{	"target": "Atanh" },
				{	"target": "BitShift", "skip": true, "comment": "TODO need attributes" },
				{	"target": "Cast",     "skip": true, "comment": "TODO need attributes" },
				{	"target": "Ceil", "tags": [ "SmokeTest" ]},
				{	"target": "Clip", "tags": [ "SmokeTest" ], "additional_datasets": [ "Elementwise.ClipTestWithExtraInput" ], "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need scalar tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need scalar tensor support"}						
					]},
				{	"target": "Cos" },
				{	"target": "Cosh" },
				{	"target": "Elu", "comment": "TODO test with not-default attribute", "runtimes": [
						{ "name": "NNXRuntimeORTDml", "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeDml",    "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeHlsl",   "absolute_error":  1e-4, "relative_error": 0.03}
					]},
				{	"target": "Erf", "tags": [ "SmokeTest" ], "runtimes": [
						{ "name": "NNXRuntimeORTDml", "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeDml",    "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeHlsl",   "absolute_error":  5e-4, "relative_error": 0.05, "comment": "NNXRuntimeHLSL Erf implementation is less precise than the DML one"}
					]},
				{	"target": "Exp" },
				{	"target": "Floor" },
				{	"target": "IsInf", "skip": true, "comment": "TODO add flexibility in test data setup + bool tensors" },
				{	"target": "IsNan", "skip": true, "comment": "TODO add flexibility in test data setup + bool tensors" },
				{	"target": "HardSigmoid",         "comment": "TODO test with not-default attribute" },
				{	"target": "HardSwish", "runtimes": [ { "name": "NNXRuntimeDml", "skip": true, "comment": "Not implemented atm on NNXRuntimeDML."} ]},
				{	"target": "LeakyRelu",           "comment": "TODO test with not-default attribute" },
				{	"target": "Log", "runtimes": [
						{ "name": "NNXRuntimeORTDml", "relative_error": 0.15},
						{ "name": "NNXRuntimeDml",    "relative_error": 0.15},
						{ "name": "NNXRuntimeHlsl",   "relative_error": 0.15}
					]},
				{	"target": "Neg" },
				{	"target": "Not", "input_type": "boolean", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "Reciprocal", "tags": [ "SmokeTest" ] },
				{	"target": "Relu", "tags": [ "SmokeTest" ] },
				{	"target": "Round", "tags": [ "SmokeTest" ] },
				{	"target": "Selu", "comment": "TODO test with not-default attribute", "runtimes": [
						{ "name": "NNXRuntimeORTDml", "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeDml",    "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeHlsl",   "absolute_error":  1e-4, "relative_error": 0.03}
					]},
				{	"target": "Sigmoid", "tags": [ "SmokeTest" ] },
				{	"target": "Sign" },
				{	"target": "Sin", "runtimes": [
						{ "name": "NNXRuntimeORTDml", "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeDml",    "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeHlsl",   "absolute_error":  1e-4, "relative_error": 0.03}
					]},
				{	"target": "Sinh" },
				{	"target": "Softplus", "tags": [ "SmokeTest" ] },
				{	"target": "Softsign", "tags": [ "SmokeTest" ] },
				{	"target": "Sqrt", "tags": [ "SmokeTest" ] },
				{	"target": "Tan", "runtimes": [
						{ "name": "NNXRuntimeORTDml", "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeDml",    "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeHlsl",   "absolute_error":  1e-4, "relative_error": 0.03}
					]},
				{	"target": "Tanh", "runtimes": [
						{ "name": "NNXRuntimeORTDml", "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeDml",    "absolute_error":  1e-4, "relative_error": 0.03},
						{ "name": "NNXRuntimeHlsl",   "absolute_error":  1e-4, "relative_error": 0.03}
					]}
			]
		},
		{
			"category": "Elementwise.Binary",
			"runtimes": [ { "name": "NNXRuntimeDml", "skip": true} ],
			"targets": [
				{	"target": "Add", "additional_datasets": [ "Elementwise.Slow.TwoInputs" ]},
				{	"target": "And", "tags": [ "SmokeTest" ], "input_type": "boolean", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "Div", "tags": [ "SmokeTest" ]},
				{	"target": "Equal", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "Greater", "tags": [ "SmokeTest" ], "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "GreaterOrEqual", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "Less", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "LessOrEqual", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "Mod", "skip": true, "comment": "TODO need to set fmod attribute to 1 for floating point tensors"},
				{	"target": "Mul"},
				{	"target": "Or", "input_type": "boolean", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "PRelu", "tags": [ "SmokeTest" ], "removed_datasets": [ 
						"Elementwise.Binary.BidirectionalBroadcast", 
						"Elementwise.Binary.LHSToRHSBroadcast" ], 
					"comment": "Prelu does not support bidirectional broadcast. It only support slope(RHS) to input0(LHS)"},
				{	"target": "Pow", "absolute_error": 1e-4},
				{	"target": "Sub"},
				{	"target": "Xor", "input_type": "boolean", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]}
			]
		},
		{
			"category": "Elementwise.Variadic",
			"additional_datasets": [ "Elementwise.Binary" ],
			"runtimes": [ { "name": "NNXRuntimeDml", "skip": true} ],
			"targets": [
				{	"target": "Max", "additional_datasets": [ "Elementwise.Slow.TwoInputs" ]},
				{	"target": "Mean", "tags": [ "SmokeTest" ]},
				{	"target": "Min"},
				{	"target": "Sum", "tags": [ "SmokeTest" ]}
			]
		},
		{
			"category": "Gemm",
			"runtimes": [ { "name": "NNXRuntimeDml", "skip": true } ],
			"targets": [
				{ "target": "Gemm" }
			]
		},
		{
			"category": "ConvTranspose",
			"runtimes": [	{	"name": "NNXRuntimeDml", "skip": true	}	],
			"targets": [
				{ "target": "ConvTranspose" }
			]
		},
		{
			"category": "MatMul",
			"runtimes": [ { "name": "NNXRuntimeDml", "skip": true } ],
			"targets": [
				{ "target": "MatMul" }
			]
		}
	],

	"input_output_sets": [
		{
			"name": "Elementwise.Unary.Regular",
			"datasets": [
				{ "inputs": [ { "shape": [ 1 ] } ], "comment": "if not specified output is defaulted as the first input" },
				{ "inputs": [ { "shape": [ 1,2,3,4 ] } ] },
				{ "inputs": [ { "shape": [ 1,512 ] } ] }
			]
		},
		{
			"name": "Elementwise.Unary.ZeroSized",
			"datasets": [
				{ "inputs": [ { "shape": [ 1,0,3 ] } ],
					"runtimes": [
						{ "name": "NNXRuntimeHLSL", "skip": true, "comment": "RDG does not support 0 sized tensor" },
						{ "name": "NNXRuntimeDML",  "skip": true, "comment": "RDG does not support 0 sized tensor" }
					]}
			]
		},
		{
			"name": "Elementwise.ClipTestWithExtraInput",
			"datasets": [
				{ "inputs": [ { "shape": [1], "comment": "input" }, { "shape": [1], "comment": "min" } ] },
				{ "inputs": [ { "shape": [1], "comment": "input" }, { "shape": [1], "comment": "min" }, { "shape": [1], "comment": "max" } ] }
			]
		},
		{
			"name": "Elementwise.Slow.OneInput",
			"datasets": [
				{
					"inputs": [ { "shape": [ 65536, 513 ] } ]
				}
			]
		},
		{
			"name": "Elementwise.Binary.NoBroadcast",
			"datasets": [
				{ "inputs": [ { "shape": [ 1 ] }, { "shape": [ 1 ] } ]},
				{ "inputs": [ { "shape": [ 4 ] }, { "shape": [ 4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,4,5,6 ] }, { "shape": [ 2,3,4,5,6 ] } ] }
			]
		},
		{
			"name": "Elementwise.Variadic.NoBroadcast",
			"datasets": [
				{ "inputs": [ { "shape": [ 1 ] }, { "shape": [ 1 ] }, { "shape": [ 1 ] } ]},
				{ "inputs": [ { "shape": [ 1 ] }, { "shape": [ 1 ] }, { "shape": [ 1 ] }, { "shape": [ 1 ] } ]},
				{ "inputs": [ { "shape": [ 4 ] }, { "shape": [ 4 ] }, { "shape": [ 4 ] } ]},
				{ "inputs": [ { "shape": [ 5 ] }, { "shape": [ 5 ] }, { "shape": [ 5 ] }, { "shape": [ 5 ] }, { "shape": [ 5 ] }, { "shape": [ 5 ] }, { "shape": [ 5 ] }, { "shape": [ 5 ] } ]}
			]
		},
		{
			"name": "Elementwise.Binary.ZeroSized",
			"datasets": [
				{ "inputs": [ { "shape": [ 1,0 ] }, { "shape": [ 1,1 ] } ],
					"runtimes": [
						{ "name": "NNXRuntimeHLSL", "skip": true, "comment": "RDG does not support 0 sized tensor" },
						{ "name": "NNXRuntimeDML",  "skip": true, "comment": "RDG does not support 0 sized tensor" }
					]}
			]
		},
		{
			"name": "Elementwise.Binary.RHSToLHSBroadcast",
			"datasets": [
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 1,1,1 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 2,1,1 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 1,1,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 1,3,1 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 1,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 2,1,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 1 ]     } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 4 ]     } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 1,1 ]   } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 3,1 ]   } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 1,4 ]   } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 3,4 ]   } ]}
			]
		},
		{
			"name": "Elementwise.Binary.BidirectionalBroadcast",
			"datasets": [
				{ "inputs": [ { "shape": [ 2,3,1 ] }, { "shape": [ 1,1,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,1,4 ] }, { "shape": [ 2,3,1 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,1 ] }, { "shape": [ 4 ]     } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,1 ] }, { "shape": [ 1,4 ]   } ], "outputs": [ { "shape": [ 2,3,4 ] } ]}
			]
		},
		{
			"name": "Elementwise.Variadic.MultiDirectionalBroadcast",
			"datasets": [
				{ "inputs": [ { "shape": [ 2,3,1 ] }, { "shape": [ 1,1,4 ] }, { "shape": [ 1,1,1 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,1,4 ] }, { "shape": [ 1,3,4 ] }, { "shape": [ 2,3,1 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,1 ] }, { "shape": [ 4 ]     }, { "shape": [ 3,1 ]   } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,1 ] }, { "shape": [ 3,1 ]   }, { "shape": [ 4 ]     } ], "outputs": [ { "shape": [ 2,3,4 ] } ]}
			]
		},
		{
			"name": "Elementwise.Binary.LHSToRHSBroadcast",
			"datasets": [
				{ "inputs": [ { "shape": [ 1,1,1 ] }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,1,1 ] }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 1,1,4 ] }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 1,3,1 ] }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 1,3,4 ] }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,1,4 ] }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 1 ]     }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 4 ]     }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 1,1 ]   }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 3,1 ]   }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 1,4 ]   }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 3,4 ]   }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]}
			]
		},
		{
			"name": "Elementwise.Slow.TwoInputs",
			"datasets": [
				{
					"inputs": [ { "shape": [ 65536, 513 ] }, { "shape": [ 1 ] } ]
				}
			]
		},
		{
			"name": "Gemm",
			"datasets": [
				{ "inputs": [ { "shape": [ 2, 2 ] }, { "shape": [ 2, 2 ] } ], "outputs": [ { "shape": [ 2, 2 ] } ]},
				{ "inputs": [ { "shape": [ 3, 4 ] }, { "shape": [ 4, 5 ] } ], "outputs": [ { "shape": [ 3, 5 ] } ]},
				{ "inputs": [ { "shape": [ 3, 4 ] }, { "shape": [ 4, 5 ] }, { "shape": [ 3, 5 ] } ], "outputs": [ { "shape": [ 3, 5 ] } ]},
				{ "inputs": [ { "shape": [ 1, 1 ] }, { "shape": [ 1, 5 ] }, { "shape": [ 5 ] } ], "outputs": [ { "shape": [ 1, 5 ] } ]}
			]
		},
		{
			"name": "ConvTranspose",
			"datasets": [
				{	"inputs": [	{ "shape": [ 1, 1, 1 ] },	{ "shape": [ 1, 1, 1 ] } ],	"outputs": [ { "shape": [ 1, 1, 1 ] } ]},
				{	"inputs": [	{ "shape": [ 1, 1, 1 ] },	{ "shape": [ 1, 1, 1 ] },	{ "shape": [ 1 ] } ],	"outputs": [ { "shape": [ 1, 1, 1 ] } ]}
			]
		},
		{
			"name": "MatMul.Regular",
			"datasets": [
				{ "inputs": [ { "shape": [ 2, 2 ] }, { "shape": [ 2, 2 ] } ], "outputs": [ { "shape": [ 2, 2 ] } ]},
				{ "inputs": [ { "shape": [ 3, 4 ] }, { "shape": [ 4, 5 ] } ], "outputs": [ { "shape": [ 3, 5 ] } ]},
				{ "inputs": [ { "shape": [ 2, 3, 4 ] }, { "shape": [ 2, 4, 5 ] } ], "outputs": [ { "shape": [ 2, 3, 5 ] } ]},
				{ "inputs": [ { "shape": [ 5, 4 ] }, { "shape": [ 2, 4, 3 ] } ], "outputs": [ { "shape": [ 2, 5, 3 ] } ]},
				{ "inputs": [ { "shape": [ 2, 5, 4 ] }, { "shape": [ 4, 3 ] } ], "outputs": [ { "shape": [ 2, 5, 3 ] } ]},
				{ "inputs": [ { "shape": [ 1, 4 ] }, { "shape": [ 4, 3 ] } ], "outputs": [ { "shape": [ 1, 3 ] } ]},
				{ "inputs": [ { "shape": [ 1, 4 ] }, { "shape": [ 2, 4, 3 ] } ], "outputs": [ { "shape": [ 2, 1, 3 ] } ]},
				{ "inputs": [ { "shape": [ 3, 4 ] }, { "shape": [ 4, 1 ] } ], "outputs": [ { "shape": [ 3, 1 ] } ]},
				{ "inputs": [ { "shape": [ 2, 2, 3, 4 ] }, { "shape": [ 4, 1 ] } ], "outputs": [ { "shape": [ 2, 2, 3, 1 ] } ]},
				{ "inputs": [ { "shape": [ 1, 6 ] }, { "shape": [ 6, 1 ] } ], "outputs": [ { "shape": [ 1, 1 ] } ]}
			]
		},
		{
			"name": "MatMul.Rank5",
			"runtimes": [	
				{	"name": "NNXRuntimeORTDml", "skip": true, "comment": "DML metacommand only support 2 to 4 for inputs rank" 	},
				{ "name": "NNXRuntimeHlsl", "relative_error": 0.01}
			],
			"datasets": [
				{ "inputs": [ { "shape": [ 2, 2, 3, 5, 4 ] }, { "shape": [ 2, 1, 3, 4, 3 ] } ], "outputs": [ { "shape": [ 2, 2, 3, 5, 3 ] } ]},
				{ "inputs": [ { "shape": [ 2, 1, 2, 5, 4 ] }, { "shape": [ 1, 3, 2, 4, 3 ] } ], "outputs": [ { "shape": [ 2, 3, 2, 5, 3 ] } ]},
				{ "inputs": [ { "shape": [ 1, 1, 2, 5, 4 ] }, { "shape": [ 2, 3, 2, 4, 3 ] } ], "outputs": [ { "shape": [ 2, 3, 2, 5, 3 ] } ]},
				{ "inputs": [ { "shape": [ 1, 2, 5, 4 ] }, { "shape": [ 2, 3, 2, 4, 3 ] } ], "outputs": [ { "shape": [ 2, 3, 2, 5, 3 ] } ]},
				{ "inputs": [ { "shape": [ 5, 4 ] }, { "shape": [ 2, 1, 3, 4, 3 ] } ], "outputs": [ { "shape": [ 2, 1, 3, 5, 3 ] } ]},
				{ "inputs": [ { "shape": [ 2, 1, 3, 5, 4 ] }, { "shape": [ 4, 3 ] } ], "outputs": [ { "shape": [ 2, 1, 3, 5, 3 ] } ]}
			]
		}
	]
	
}
