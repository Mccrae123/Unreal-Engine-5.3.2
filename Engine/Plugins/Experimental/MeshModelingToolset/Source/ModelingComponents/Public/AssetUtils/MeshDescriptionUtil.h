// Copyright Epic Games, Inc. All Rights Reserved.

#pragma once

#include "CoreMinimal.h"
#include "MeshDescription.h"

// predeclare engine types
class UStaticMesh;
class UActorComponent;
struct FMeshBuildSettings;


namespace UE
{
	namespace MeshDescription
	{

		/**
		 * Populate any auto-generated attributes of a FMeshDescription that are currently invalid (eg Normals/Tangents, which may be zero until calculated)
		 */
		MODELINGCOMPONENTS_API void InitializeAutoGeneratedAttributes(FMeshDescription& Mesh, const FMeshBuildSettings* BuildSettings);

		/**
		 * Populate any auto-generated attributes of a FMeshDescription that are currently invalid (eg Normals/Tangents, which may be zero until calculated)
		 * @param StaticMesh BuildSettings for the Mesh are fetched from this UStaticMesh
		 * @param SourceLOD BuildSettings from this LOD Index are used
		 */
		MODELINGCOMPONENTS_API void InitializeAutoGeneratedAttributes(FMeshDescription& Mesh, UStaticMesh* StaticMesh, int32 SourceLOD);

		/**
		 * Populate any auto-generated attributes of a FMeshDescription that are currently invalid (eg Normals/Tangents, which may be zero until calculated)
		 * @param StaticMeshComponent BuildSettings for the Mesh are fetched from this Component's UStaticMesh
		 * @param SourceLOD BuildSettings from this LOD Index are used
		 */
		MODELINGCOMPONENTS_API void InitializeAutoGeneratedAttributes(FMeshDescription& Mesh, UActorComponent* StaticMeshComponent, int32 SourceLOD);
	}
}