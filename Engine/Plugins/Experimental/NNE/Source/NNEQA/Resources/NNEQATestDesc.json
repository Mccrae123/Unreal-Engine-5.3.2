{
	"$schema": "./NNEQATestDescSchema.json",
	"model_test_categories": [
		{
			"category": "OnnxZoo",
			"is_model_test": true,
			"targets": [
				{
					"target": "resnet50-v2-7",
					"tags": [ "SmokeTest" ],
					"runtimes": [
						{ "name": "NNERuntimeORTDml" },
						{ "name": "NNXRuntimeHlsl",  "skip": true, "comment": "Missing BatchNormalisation operator." },
						{ "name": "NNXRuntimeDml",  "skip": true, "comment": "Model not supported yet." }
					],
					"absolute_tolerance": 1e-5
				},
				{
					"target": "Mosaic-9",
					"runtimes": [
						{ "name": "NNERuntimeORTDml" },
						{ "name": "NNERuntimeORTCpuEditor" },
						{ "name": "NNXRuntimeHlsl" },
						{ "name": "NNXRuntimeDml",  "skip": true, "comment": "Model not supported yet." }
					],
					"absolute_tolerance": 5.0e-2
				}
			]
		},
		{
			"category": "InHouse",
			"is_model_test": true,
			"targets": [
				{
					"target": "NeuralMorphModel_global",
					"tags": [ "SmokeTest" ],
					"runtimes": [
						{ "name": "NNERuntimeORTDml" },
						{ "name": "NNXRuntimeHlsl" },
						{ "name": "NNXRuntimeDml" }
					],
					"absolute_tolerance": 1e-5
				},
				{
					"target": "NeuralMorphModel_global_Dax",
					"tags": [ "SmokeTest" ],
					"runtimes": [
						{ "name": "NNERuntimeORTDml", "skip": true, "comment": "" },
						{ "name": "NNXRuntimeHlsl",	"skip": true, "comment": "Model not supported yet."	},
						{ "name": "NNXRuntimeDml",  "skip": true, "comment": "Model not supported yet." }
					]
				},
				{
					"target": "NeuralMorphModel_Local",
					"tags": [ "SmokeTest" ],
					"runtimes": [
						{ "name": "NNERuntimeORTDml", "absolute_tolerance": 1e-6 },
						{ "name": "NNXRuntimeHlsl",  "skip": true, "comment": "Missing Reshape operator." },
						{ "name": "NNXRuntimeDml",  "skip": true, "comment": "Model not supported yet." }
					]
				},
				{
					"target": "VertexDeltaModel",
					"runtimes": [
						{ "name": "NNERuntimeORTDml", "absolute_tolerance": 1e-4 },
						{ "name": "NNXRuntimeHlsl", "absolute_tolerance": 1e-4 },
						{ "name": "NNXRuntimeDml",  "skip": true, "comment": "Model not supported yet." }
					]
				}
			]
		},
		{
			"category": "SimpleTests",
			"is_model_test": true,
			"targets": [
				{
					"target": "OneLayerWithWeights",
					"runtimes": [
						{ "name": "NNXRuntimeDml",  "skip": true, "comment": "Model not supported yet." }
					]
				},
				{
					"target": "TwoLayersNoWeight",
					"tags": [ "SmokeTest" ],
					"runtimes": [
						{ "name": "NNXRuntimeDml",  "skip": true, "comment": "Model not supported yet." }
					]
				},
				{
					"target": "MultiOutput",
					"tags": [ "SmokeTest" ],
					"runtimes": [
						{ "name": "NNXRuntimeDml",  "skip": true, "comment": "Model not supported yet." }
					]
				}
			]
		},
		{
			"category": "VariableInputShapes",
			"is_model_test": true,
			"targets": [
				{
					"target": "OneLayerNoWeightVariableInputShape",
					"runtimes": [
						{ "name": "NNXRuntimeDML",  "skip": true, "comment": "RDG does not support variable input sized tensor" }
					]
				},
				{
					"target": "TwoLayersNoWeightVariableInputShape",
					"tags": [ "SmokeTest" ],
					"runtimes": [
						{ "name": "NNXRuntimeDML",  "skip": true, "comment": "RDG does not support variable input sized tensor" }
					]
				}
			]
		}
	],

	"operator_test_categories": [
		{
			"category": "Elementwise.Unary",
			"targets": [
				{	"target": "Abs", "additional_datasets": [ "Elementwise.Slow.OneInput" ]},
				{	"target": "Acos", "tags": [ "SmokeTest" ], "runtimes": [
						{ "name": "NNERuntimeORTDml", "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeDml",    "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeHlsl",   "absolute_tolerance":  2e-4}
					]},
				{	"target": "Acosh" },
				{	"target": "Asin", "runtimes": [
						{ "name": "NNERuntimeORTDml", "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeDml",    "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeHlsl",   "absolute_tolerance":  2e-4}
					]},
				{	"target": "Asinh", "runtimes": [
						{ "name": "NNERuntimeORTDml", "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeDml",    "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeHlsl",   "absolute_tolerance":  2e-4}
					]},
				{	"target": "Atan", "runtimes": [
						{ "name": "NNERuntimeORTDml", "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeDml",    "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeHlsl",   "absolute_tolerance":  1.5e-3}
					]},
				{	"target": "Atanh" },
				{	"target": "BitShift", "skip": true, "comment": "TODO need attributes" },
				{	"target": "Cast",     "skip": true, "comment": "TODO need attributes" },
				{	"target": "Ceil"},
				{	"target": "Clip", "additional_datasets": [ "Elementwise.ClipTestWithExtraInput" ], "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need scalar tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need scalar tensor support"}						
					]},
				{	"target": "Cos" },
				{	"target": "Cosh" },
				{	"target": "Elu", "comment": "TODO test with not-default attribute", "runtimes": [
						{ "name": "NNERuntimeORTDml", "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeDml",    "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeHlsl",   "absolute_tolerance":  1e-4}
					]},
				{	"target": "Erf", "runtimes": [
						{ "name": "NNERuntimeORTDml", "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeDml",    "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeHlsl",   "absolute_tolerance":  5e-4, "comment": "NNXRuntimeHLSL Erf implementation is less precise than the DML one"}
					]},
				{	"target": "Exp" },
				{	"target": "Floor" },
				{	"target": "IsInf", "skip": true, "comment": "TODO add flexibility in test data setup + bool tensors" },
				{	"target": "IsNan", "skip": true, "comment": "TODO add flexibility in test data setup + bool tensors" },
				{	"target": "HardSigmoid",         "comment": "TODO test with not-default attribute" },
				{	"target": "HardSwish", "runtimes": [ { "name": "NNXRuntimeDml", "skip": true, "comment": "Not implemented atm on NNXRuntimeDML."} ]},
				{	"target": "LeakyRelu", "additional_datasets": [ "Elementwise.LeakyRelu.AttributeTest" ] },
				{	"target": "Log", "runtimes": [
						{ "name": "NNERuntimeORTDml"},
						{ "name": "NNXRuntimeDml"},
						{ "name": "NNXRuntimeHlsl"}
					], "absolute_tolerance": 1e-6 },
				{	"target": "Neg" },
				{	"target": "Not", "input_type": "boolean", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "Reciprocal"},
				{	"target": "Relu"},
				{	"target": "Round"},
				{	"target": "Selu", "comment": "TODO test with not-default attribute", "runtimes": [
						{ "name": "NNERuntimeORTDml", "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeDml",    "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeHlsl",   "absolute_tolerance":  1e-4}
					]},
				{	"target": "Sigmoid"},
				{	"target": "Sign" },
				{	"target": "Sin", "runtimes": [
						{ "name": "NNERuntimeORTDml", "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeDml",    "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeHlsl",   "absolute_tolerance":  1e-4}
					]},
				{	"target": "Sinh" },
				{	"target": "Softplus"},
				{	"target": "Softsign"},
				{	"target": "Sqrt"},
				{	"target": "Tan", "runtimes": [
						{ "name": "NNERuntimeORTDml", "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeDml",    "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeHlsl",   "absolute_tolerance":  1e-4}
					]},
				{	"target": "Tanh", "runtimes": [
						{ "name": "NNERuntimeORTDml", "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeDml",    "absolute_tolerance":  1e-4},
						{ "name": "NNXRuntimeHlsl",   "absolute_tolerance":  1e-4}
					]}
			]
		},
		{
			"category": "Elementwise.Binary",
			"targets": [
				{	"target": "Add", "additional_datasets": [ "Elementwise.Slow.TwoInputs" ]},
				{	"target": "And", "input_type": "boolean", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "Div", "tags": [ "SmokeTest" ]},
				{	"target": "Equal", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "Greater", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "GreaterOrEqual", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "Less", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "LessOrEqual", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "Mod", "skip": true, "comment": "TODO need to set fmod attribute to 1 for floating point tensors"},
				{	"target": "Mul"},
				{	"target": "Or", "input_type": "boolean", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]},
				{	"target": "PRelu", "removed_datasets": [ 
						"Elementwise.Binary.BidirectionalBroadcast", 
						"Elementwise.Binary.LHSToRHSBroadcast" ], 
					"comment": "Prelu does not support bidirectional broadcast. It only support slope(RHS) to input0(LHS)"},
				{	"target": "Pow", "absolute_tolerance": 1e-4},
				{	"target": "Sub"},
				{	"target": "Xor", "input_type": "boolean", "output_type": "boolean", "runtimes": [
						{ "name": "NNXRuntimeDml", "skip": true, "comment": "RDG need bool tensor support"},
						{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "RDG need bool tensor support"}						
					]}
			]
		},
		{
			"category": "Elementwise.Variadic",
			"additional_datasets": [ "Elementwise.Binary" ],
			"runtimes": [ { "name": "NNXRuntimeDml", "skip": true} ],
			"targets": [
				{	"target": "Max", "additional_datasets": [ "Elementwise.Slow.TwoInputs" ]},
				{	"target": "Mean", "tags": [ "SmokeTest" ]},
				{	"target": "Min"},
				{	"target": "Sum"}
			]
		},
		{
			"category": "Gemm",
			"targets": [
				{ "target": "Gemm", "tags": [ "SmokeTest" ] }
			]
		},
		{
			"category": "Convolution",
			"runtimes": [
				{ "name": "NNXRuntimeDml", "skip": true	},
				{ "name": "NNERuntimeORTDml" },
				{ "name": "NNXRuntimeHlsl" }
			],
			"targets": [
				{ "target": "Conv", "absolute_tolerance": 1e-6 }
			]
		},
		{
			"category": "ConvTranspose",
			"runtimes": [
				{ "name": "NNXRuntimeDml", "skip": true	},
				{ "name": "NNERuntimeORTDml" },
				{ "name": "NNXRuntimeHlsl" }
			],
			"targets": [
				{ "target": "ConvTranspose", "absolute_tolerance": 1e-6 }
			]
		},
		{
			"category": "MatMul",
			"runtimes": [ { "name": "NNXRuntimeDml", "skip": true } ],
			"targets": [
				{ "target": "MatMul" }
			]
		},
		{
			"category": "PadOp",
			"runtimes": [
				{ "name": "NNXRuntimeDml", "skip": true	}
			],
			"targets": [
				{ "target": "Pad" }
			]
		},
		{
			"category": "InstanceNormalization",
			"runtimes": [
				{ "name": "NNXRuntimeDml", "skip": true }
			],
			"targets": [
				{ "target": "InstanceNormalization", "absolute_tolerance": 1e-5 }
			]
		},
		{
			"category": "Upsample",
			"runtimes": [
				{ "name": "NNXRuntimeDml", "skip": true	}
			],
			"targets": [
				{ "target": "Upsample" }
			]
		}
	],

	"input_output_sets": [
		{
			"name": "VariableInputShapes.Regular",
			"datasets": [
				{ "inputs": [ { "shape": [ 1,1 ] } ], "comment": "if not specified output is defaulted as the first input" },
				{ "inputs": [ { "shape": [ 2,3 ] } ] }
			]
		},
		{
			"name": "Elementwise.Unary.Regular",
			"datasets": [
				{ "inputs": [ { "shape": [ 1 ] } ] },
				{ "inputs": [ { "shape": [ 1,2,3,4 ] } ] },
				{ "inputs": [ { "shape": [ 1,512 ] } ] }
			]
		},
		{
			"name": "Elementwise.Unary.ZeroSized",
			"datasets": [
				{ "inputs": [ { "shape": [ 1,0,3 ] } ],
					"runtimes": [
						{ "name": "NNXRuntimeHLSL", "skip": true, "comment": "RDG does not support 0 sized tensor" },
						{ "name": "NNXRuntimeDML",  "skip": true, "comment": "RDG does not support 0 sized tensor" }
					]}
			]
		},
		{
			"name": "Elementwise.ClipTestWithExtraInput",
			"datasets": [
				{ "inputs": [ { "shape": [1], "comment": "input" }, { "shape": [1], "comment": "min" } ] },
				{ "inputs": [ { "shape": [1], "comment": "input" }, { "shape": [1], "comment": "min" }, { "shape": [1], "comment": "max" } ] }
			]
		},
		{
			"name": "Elementwise.Slow.OneInput",
			"datasets": [
				{
					"inputs": [ { "shape": [ 65536, 513 ] } ]
				}
			]
		},
		{
			"name": "Elementwise.LeakyRelu.AttributeTest",
			"datasets": [
				{
					"inputs": [ { "shape": [ 4 ] } ]
				}
			]
		},
		{
			"name": "Elementwise.Binary.NoBroadcast",
			"datasets": [
				{ "inputs": [ { "shape": [ 1 ] }, { "shape": [ 1 ] } ]},
				{ "inputs": [ { "shape": [ 4 ] }, { "shape": [ 4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,4,5,6 ] }, { "shape": [ 2,3,4,5,6 ] } ] }
			]
		},
		{
			"name": "Elementwise.Variadic.NoBroadcast",
			"datasets": [
				{ "inputs": [ { "shape": [ 1 ] }, { "shape": [ 1 ] }, { "shape": [ 1 ] } ]},
				{ "inputs": [ { "shape": [ 1 ] }, { "shape": [ 1 ] }, { "shape": [ 1 ] }, { "shape": [ 1 ] } ]},
				{ "inputs": [ { "shape": [ 4 ] }, { "shape": [ 4 ] }, { "shape": [ 4 ] } ]},
				{ "inputs": [ { "shape": [ 5 ] }, { "shape": [ 5 ] }, { "shape": [ 5 ] }, { "shape": [ 5 ] }, { "shape": [ 5 ] }, { "shape": [ 5 ] }, { "shape": [ 5 ] }, { "shape": [ 5 ] } ]}
			]
		},
		{
			"name": "Elementwise.Binary.ZeroSized",
			"datasets": [
				{ "inputs": [ { "shape": [ 1,0 ] }, { "shape": [ 1,1 ] } ],
					"runtimes": [
						{ "name": "NNXRuntimeHLSL", "skip": true, "comment": "RDG does not support 0 sized tensor" },
						{ "name": "NNXRuntimeDML",  "skip": true, "comment": "RDG does not support 0 sized tensor" }
					]}
			]
		},
		{
			"name": "Elementwise.Binary.RHSToLHSBroadcast",
			"datasets": [
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 1,1,1 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 2,1,1 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 1,1,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 1,3,1 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 1,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 2,1,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 1 ]     } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 4 ]     } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 1,1 ]   } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 3,1 ]   } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 1,4 ]   } ]},
				{ "inputs": [ { "shape": [ 2,3,4 ] }, { "shape": [ 3,4 ]   } ]}
			]
		},
		{
			"name": "Elementwise.Binary.BidirectionalBroadcast",
			"datasets": [
				{ "inputs": [ { "shape": [ 2,3,1 ] }, { "shape": [ 1,1,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,1,4 ] }, { "shape": [ 2,3,1 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,1 ] }, { "shape": [ 4 ]     } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,1 ] }, { "shape": [ 1,4 ]   } ], "outputs": [ { "shape": [ 2,3,4 ] } ]}
			]
		},
		{
			"name": "Elementwise.Variadic.MultiDirectionalBroadcast",
			"datasets": [
				{ "inputs": [ { "shape": [ 2,3,1 ] }, { "shape": [ 1,1,4 ] }, { "shape": [ 1,1,1 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,1,4 ] }, { "shape": [ 1,3,4 ] }, { "shape": [ 2,3,1 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,1 ] }, { "shape": [ 4 ]     }, { "shape": [ 3,1 ]   } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,3,1 ] }, { "shape": [ 3,1 ]   }, { "shape": [ 4 ]     } ], "outputs": [ { "shape": [ 2,3,4 ] } ]}
			]
		},
		{
			"name": "Elementwise.Binary.LHSToRHSBroadcast",
			"datasets": [
				{ "inputs": [ { "shape": [ 1,1,1 ] }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,1,1 ] }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 1,1,4 ] }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 1,3,1 ] }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 1,3,4 ] }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 2,1,4 ] }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 1 ]     }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 4 ]     }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 1,1 ]   }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 3,1 ]   }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 1,4 ]   }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]},
				{ "inputs": [ { "shape": [ 3,4 ]   }, { "shape": [ 2,3,4 ] } ], "outputs": [ { "shape": [ 2,3,4 ] } ]}
			]
		},
		{
			"name": "Elementwise.Slow.TwoInputs",
			"datasets": [
				{
					"inputs": [ { "shape": [ 65536, 513 ] }, { "shape": [ 1 ] } ]
				}
			]
		},
		{
			"name": "Gemm.TwoInputs.NoTranspose",
			"datasets": [
				{ "inputs": [ { "shape": [ 2, 2 ] }, { "shape": [ 2, 2 ] } ], "outputs": [ { "shape": [ 2, 2 ] } ]},
				{ "inputs": [ { "shape": [ 3, 4 ] }, { "shape": [ 4, 5 ] } ], "outputs": [ { "shape": [ 3, 5 ] } ]}
			],
			"runtimes": [
				{ "name": "NNERuntimeORTDml", "skip": true, "comment": "Variable dimension without bias is failing for NNERuntimeORTDml" }
			]
		},
		{
			"name": "Gemm.TwoInputs.TransposedA",
			"datasets": [
				{ "inputs": [ { "shape": [ 2, 2 ] }, { "shape": [ 2, 2 ] } ], "outputs": [ { "shape": [ 2, 2 ] } ]},
				{ "inputs": [ { "shape": [ 4, 3 ] }, { "shape": [ 4, 5 ] } ], "outputs": [ { "shape": [ 3, 5 ] } ]}
			],
			"runtimes": [
				{ "name": "NNERuntimeORTDml", "skip": true, "comment": "Variable dimension without bias is failing for NNERuntimeORTDml" }
			]
		},
		{
			"name": "Gemm.TwoInputs.TransposedB",
			"datasets": [
				{ "inputs": [ { "shape": [ 2, 2 ] }, { "shape": [ 2, 2 ] } ], "outputs": [ { "shape": [ 2, 2 ] } ]},
				{ "inputs": [ { "shape": [ 3, 4 ] }, { "shape": [ 5, 4 ] } ], "outputs": [ { "shape": [ 3, 5 ] } ]}
			],
			"runtimes": [
				{ "name": "NNERuntimeORTDml", "skip": true, "comment": "Variable dimension without bias is failing for NNERuntimeORTDml" }
			]
		},
		{
			"name": "Gemm.TwoInputs.AllTransposed",
			"datasets": [
				{ "inputs": [ { "shape": [ 2, 2 ] }, { "shape": [ 2, 2 ] } ], "outputs": [ { "shape": [ 2, 2 ] } ]},
				{ "inputs": [ { "shape": [ 4, 3 ] }, { "shape": [ 5, 4 ] } ], "outputs": [ { "shape": [ 3, 5 ] } ]}
			],
			"runtimes": [
				{ "name": "NNERuntimeORTDml", "skip": true, "comment": "Variable dimension without bias is failing for NNERuntimeORTDml" }
			]
		},
		{
			"name": "Gemm.ThreeInputs.NoTranspose",
			"datasets": [
				{ "inputs": [ { "shape": [ 3, 4 ] }, { "shape": [ 4, 5 ] }, { "shape": [ 3, 5 ] } ], "outputs": [ { "shape": [ 3, 5 ] } ]},
				{ "inputs": [ { "shape": [ 1, 1 ] }, { "shape": [ 1, 5 ] }, { "shape": [ 5 ] } ], "outputs": [ { "shape": [ 1, 5 ] } ]}
			]
		},
		{
			"name": "Gemm.ThreeInputs.TransposedA",
			"datasets": [
				{ "inputs": [ { "shape": [ 4, 3 ] }, { "shape": [ 4, 5 ] }, { "shape": [ 3, 5 ] } ], "outputs": [ { "shape": [ 3, 5 ] } ]},
				{ "inputs": [ { "shape": [ 1, 1 ] }, { "shape": [ 1, 5 ] }, { "shape": [ 5 ] } ], "outputs": [ { "shape": [ 1, 5 ] } ]}
			]
		},
		{
			"name": "Gemm.ThreeInputs.TransposedB",
			"datasets": [
				{ "inputs": [ { "shape": [ 3, 4 ] }, { "shape": [ 5, 4 ] }, { "shape": [ 3, 5 ] } ], "outputs": [ { "shape": [ 3, 5 ] } ]},
				{ "inputs": [ { "shape": [ 1, 1 ] }, { "shape": [ 5, 1 ] }, { "shape": [ 5 ] } ], "outputs": [ { "shape": [ 1, 5 ] } ]}
			]
		},
		{
			"name": "Gemm.ThreeInputs.AllTransposed",
			"datasets": [
				{ "inputs": [ { "shape": [ 4, 3 ] }, { "shape": [ 5, 4 ] }, { "shape": [ 3, 5 ] } ], "outputs": [ { "shape": [ 3, 5 ] } ]},
				{ "inputs": [ { "shape": [ 1, 1 ] }, { "shape": [ 5, 1 ] }, { "shape": [ 5 ] } ], "outputs": [ { "shape": [ 1, 5 ] } ]}
			]
		},
		{ 
			"name": "Convolution.DefaultPadding",
			"datasets": [
				{ "inputs": [ { "shape": [ 1, 1, 5, 5 ] }, { "shape": [ 1, 1, 3, 3 ] } ], "outputs": [ { "shape": [ 1, 1, 5, 5 ] } ] },
				{ "inputs": [ { "shape": [ 1, 3, 5, 5 ] }, { "shape": [ 1, 3, 3, 3 ] } ], "outputs": [ { "shape": [ 1, 1, 5, 5 ] } ], "comment": "With channels" },
				{ "inputs": [ { "shape": [ 1, 1, 5, 5 ] }, { "shape": [ 3, 1, 3, 3 ] } ], "outputs": [ { "shape": [ 1, 3, 5, 5 ] } ], "comment": "With out-channels" },
				{ "inputs": [ { "shape": [ 1, 1, 5, 5 ] }, { "shape": [ 3, 1, 3, 3 ] }, { "shape": [ 3 ] } ], "outputs": [ { "shape": [ 1, 3, 5, 5 ] } ], "comment": "With bias" },
				{ "inputs": [ { "shape": [ 3, 1, 5, 5 ] }, { "shape": [ 1, 1, 3, 3 ] } ], "outputs": [ { "shape": [ 3, 1, 5, 5 ] } ], "comment": "Batches" }
			]
		},
		{ "name": "Convolution.WithoutOrAutoPadding", 			"datasets": [ { "inputs": [ { "shape": [ 1, 1, 5, 5 ] }, { "shape": [ 1, 1, 3, 3 ] } ], "outputs": [ { "shape": [ 1, 1, 3, 3 ] } ] } ] },
		{ "name": "Convolution.WithStridesAndPadding", 			"datasets": [ { "inputs": [ { "shape": [ 1, 1, 7, 5 ] }, { "shape": [ 1, 1, 3, 3 ] } ], "outputs": [ { "shape": [ 1, 1, 4, 3 ] } ] } ] },
		{ "name": "Convolution.WithoutPaddingAndStrides", 		"datasets": [ { "inputs": [ { "shape": [ 1, 1, 7, 5 ] }, { "shape": [ 1, 1, 3, 3 ] } ], "outputs": [ { "shape": [ 1, 1, 3, 2 ] } ] } ] },
		{ "name": "Convolution.AsymmetricPaddingAndStrides", 	"datasets": [ { "inputs": [ { "shape": [ 1, 1, 7, 5 ] }, { "shape": [ 1, 1, 3, 3 ] } ], "outputs": [ { "shape": [ 1, 1, 4, 2 ] } ] } ] },
		{ "name": "Convolution.WithGroups", 					"datasets": [ { "inputs": [ { "shape": [ 1, 3, 5, 5 ] }, { "shape": [ 3, 1, 3, 3 ] } ], "outputs": [ { "shape": [ 1, 3, 5, 5 ] } ] } ] },
		{ "name": "Convolution.Large1", 						"datasets": [ { "inputs": [ { "shape": [ 1, 1, 17, 17 ] }, { "shape": [ 1, 1, 3, 3 ] } ], "outputs": [ { "shape": [ 1, 1, 17, 17 ] } ] } ] },
		{ "name": "Convolution.Large2", 						"datasets": [ { "inputs": [ { "shape": [ 1, 1, 37, 37 ] }, { "shape": [ 1, 1, 3, 3 ] } ], "outputs": [ { "shape": [ 1, 1, 17, 17 ] } ] } ] },
		{ "name": "ConvTranspose.Default", 		"datasets": [ { "inputs": [ { "shape": [ 1, 1, 3, 3 ] }, { "shape": [ 1, 2, 3, 3 ] } ], "outputs": [ { "shape": [ 1, 2, 5, 5 ] } ] } ] },
		{ "name": "ConvTranspose.1D", 			"datasets": [ { "inputs": [ { "shape": [ 1, 1, 3 ] }, { "shape": [ 1, 2, 3 ] } ], "outputs": [ { "shape": [ 1, 2, 5 ] } ] } ] },
		{ "name": "ConvTranspose.3D", 			"datasets": [ { "inputs": [ { "shape": [ 1, 1, 3, 4, 5 ] }, { "shape": [ 1, 2, 3, 3, 3 ] } ], "outputs": [ { "shape": [ 1, 2, 5, 6, 7 ] } ] } ] },
		{ "name": "ConvTranspose.Attributes", 	"datasets": [ { "inputs": [ { "shape": [ 1, 1, 3, 3 ] }, { "shape": [ 1, 2, 3, 3 ] } ], "outputs": [ { "shape": [ 1, 2, 10, 8 ] } ] } ] },
		{
			"name": "ConvTranspose.Autopad",
			"datasets": [ { "inputs": [ { "shape": [ 1, 1, 3, 3 ] }, { "shape": [ 1, 2, 3, 3 ] } ], "outputs": [ { "shape": [ 1, 2, 6, 6 ] } ] } ],
			"runtimes": [
				{ "name": "NNERuntimeORTDml", "skip": true, "comment": "TODO INVESTIGATE Returns 'The parameter is incorrect'" },
				{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "Fails until ORT 1.13, because they implemented 'auto_pad' differently (they flipped 'SAME_LOWER' and 'SAME_UPPER')" }
			]
		},
		{
			"name": "MatMul.Regular",
			"datasets": [
				{ "inputs": [ { "shape": [ 2, 2 ] }, { "shape": [ 2, 2 ] } ], "outputs": [ { "shape": [ 2, 2 ] } ]},
				{ "inputs": [ { "shape": [ 3, 4 ] }, { "shape": [ 4, 5 ] } ], "outputs": [ { "shape": [ 3, 5 ] } ]},
				{ "inputs": [ { "shape": [ 2, 3, 4 ] }, { "shape": [ 2, 4, 5 ] } ], "outputs": [ { "shape": [ 2, 3, 5 ] } ]},
				{ "inputs": [ { "shape": [ 5, 4 ] }, { "shape": [ 2, 4, 3 ] } ], "outputs": [ { "shape": [ 2, 5, 3 ] } ]},
				{ "inputs": [ { "shape": [ 2, 5, 4 ] }, { "shape": [ 4, 3 ] } ], "outputs": [ { "shape": [ 2, 5, 3 ] } ]},
				{ "inputs": [ { "shape": [ 1, 4 ] }, { "shape": [ 4, 3 ] } ], "outputs": [ { "shape": [ 1, 3 ] } ]},
				{ "inputs": [ { "shape": [ 1, 4 ] }, { "shape": [ 2, 4, 3 ] } ], "outputs": [ { "shape": [ 2, 1, 3 ] } ]},
				{ "inputs": [ { "shape": [ 3, 4 ] }, { "shape": [ 4, 1 ] } ], "outputs": [ { "shape": [ 3, 1 ] } ]},
				{ "inputs": [ { "shape": [ 2, 2, 3, 4 ] }, { "shape": [ 4, 1 ] } ], "outputs": [ { "shape": [ 2, 2, 3, 1 ] } ]},
				{ "inputs": [ { "shape": [ 1, 6 ] }, { "shape": [ 6, 1 ] } ], "outputs": [ { "shape": [ 1, 1 ] } ]}
			]
		},
		{
			"name": "MatMul.Rank5",
			"runtimes": [	
				{ "name": "NNERuntimeORTDml", "skip": true, "comment": "DML metacommand only support 2 to 4 for inputs rank" },
				{ "name": "NNXRuntimeHlsl"}
			],
			"datasets": [
				{ "inputs": [ { "shape": [ 2, 2, 3, 5, 4 ] }, { "shape": [ 2, 1, 3, 4, 3 ] } ], "outputs": [ { "shape": [ 2, 2, 3, 5, 3 ] } ]},
				{ "inputs": [ { "shape": [ 2, 1, 2, 5, 4 ] }, { "shape": [ 1, 3, 2, 4, 3 ] } ], "outputs": [ { "shape": [ 2, 3, 2, 5, 3 ] } ]},
				{ "inputs": [ { "shape": [ 1, 1, 2, 5, 4 ] }, { "shape": [ 2, 3, 2, 4, 3 ] } ], "outputs": [ { "shape": [ 2, 3, 2, 5, 3 ] } ]},
				{ "inputs": [ { "shape": [ 1, 2, 5, 4 ] }, { "shape": [ 2, 3, 2, 4, 3 ] } ], "outputs": [ { "shape": [ 2, 3, 2, 5, 3 ] } ]},
				{ "inputs": [ { "shape": [ 5, 4 ] }, { "shape": [ 2, 1, 3, 4, 3 ] } ], "outputs": [ { "shape": [ 2, 1, 3, 5, 3 ] } ]},
				{ "inputs": [ { "shape": [ 2, 1, 3, 5, 4 ] }, { "shape": [ 4, 3 ] } ], "outputs": [ { "shape": [ 2, 1, 3, 5, 3 ] } ]}
			]
		},
		{
			"name": "PadOp.Pad00Rank1",
			"datasets": [
				{ "inputs":  [ { "shape": [ 3 ] } ], "outputs": [ { "shape": [ 3 ] } ] }
			]
		},
		{
			"name": "PadOp.Pad03Rank1",
			"datasets": [
				{ "inputs":  [ { "shape": [ 4 ] } ], "outputs": [ { "shape": [ 7 ] } ] }
			]
		},
		{
			"name": "PadOp.Pad20Rank1",
			"datasets": [
				{ "inputs":  [ { "shape": [ 4 ] } ], "outputs": [ { "shape": [ 6 ] } ] }
			]
		},
		{
			"name": "PadOp.Pad41Rank1",
			"datasets": [
				{ "inputs":  [ { "shape": [ 5 ] } ], "outputs": [ { "shape": [ 10 ] } ] }
			]
		},
		{
			"name": "PadOp.Pad00_10_12_34_Rank4",
			"datasets": [
				{ "inputs":  [ { "shape": [ 1,32,224,128 ] } ], "outputs": [ { "shape": [ 1,33,227,135 ] } ] }
			]
		},
		{
			"name": "Upsample.ScaleFromInput",
			"runtimes": [	
				{ "name": "NNXRuntimeDml", "skip": true, "comment": "Scale should be a constant tensor for RDG" },
				{ "name": "NNXRuntimeHlsl", "skip": true, "comment": "Scale should be a constant tensor for RDG" }
			],
			"datasets": [
				{ "inputs":  [ { "shape": [ 1 ] },                            { "shape": [ 1 ], "source": [ "3"    ],                  "type": "float" } ], "outputs": [ { "shape": [ 3 ]} ] },
				{ "inputs":  [ { "shape": [ 2 ] },                            { "shape": [ 1 ], "source": [ "2"    ],                  "type": "float" } ], "outputs": [ { "shape": [ 4 ]} ] },
				{ "inputs":  [ { "shape": [ 3 ] },                            { "shape": [ 1 ], "source": [ "1"    ],                  "type": "float" } ], "outputs": [ { "shape": [ 3 ]} ] },
				{ "inputs":  [ { "shape": [ 1, 128, 50, 55 ] },               { "shape": [ 4 ], "source": [ "1", "1", "2", "2" ],      "type": "float" } ], "outputs": [ { "shape": [ 1, 128, 100, 110 ]} ] },
				{ "inputs":  [ { "shape": [ 2, 1, 3, 1, 2 ] },                { "shape": [ 5 ], "source": [ "1", "2", "2", "1", "2" ], "type": "float" } ], "outputs": [ { "shape": [ 2, 2, 6, 1, 4 ]} ] }
			]
		},
		{
			"name": "Upsample.ScaleFromWeight",
			"datasets": [
				{ "inputs":  [ { "shape": [ 1 ] } ],              "weights": [ { "shape": [ 1 ], "source": [ "3"    ],                  "type": "float" } ], "outputs": [ { "shape": [ 3 ]} ] },
				{ "inputs":  [ { "shape": [ 2 ] } ],              "weights": [ { "shape": [ 1 ], "source": [ "2"    ],                  "type": "float" } ], "outputs": [ { "shape": [ 4 ]} ] },
				{ "inputs":  [ { "shape": [ 3 ] } ],              "weights": [ { "shape": [ 1 ], "source": [ "1"    ],                  "type": "float" } ], "outputs": [ { "shape": [ 3 ]} ] },
				{ "inputs":  [ { "shape": [ 1, 128, 50, 55 ] } ], "weights": [ { "shape": [ 4 ], "source": [ "1", "1", "2", "2" ],      "type": "float" } ], "outputs": [ { "shape": [ 1, 128, 100, 110 ]} ] },
				{ "inputs":  [ { "shape": [ 2, 1, 3, 1, 2 ] } ],  "weights": [ { "shape": [ 5 ], "source": [ "1", "2", "2", "1", "2" ], "type": "float" } ], "outputs": [ { "shape": [ 2, 2, 6, 1, 4 ]} ] }
			]
		},
		{
			"name": "InstanceNormalization",
			"datasets": [
				{ "inputs": [ { "shape": [ 1, 1, 3 ] }, { "shape": [ 1 ] }, { "shape": [ 1 ] } ], "outputs": [ { "shape": [ 1, 1, 3 ] } ], "runtimes": [ { "name": "NNERuntimeORTDml", "skip": true, "comment": "Not supported" } ] },
				{ "inputs": [ { "shape": [ 1, 2, 3 ] }, { "shape": [ 2 ] }, { "shape": [ 2 ] } ], "outputs": [ { "shape": [ 1, 2, 3 ] } ], "runtimes": [ { "name": "NNERuntimeORTDml", "skip": true, "comment": "Not supported" } ] },
				{ "inputs": [ { "shape": [ 2, 2, 3 ] }, { "shape": [ 2 ] }, { "shape": [ 2 ] } ], "outputs": [ { "shape": [ 2, 2, 3 ] } ], "runtimes": [ { "name": "NNERuntimeORTDml", "skip": true, "comment": "Not supported" } ]},
				{ "inputs": [ { "shape": [ 1, 2, 1, 3 ] }, { "shape": [ 2 ] }, { "shape": [ 2 ] } ], "outputs": [ { "shape": [ 1, 2, 1, 3 ] } ] },
				{ "inputs": [ { "shape": [ 2, 2, 1, 3 ] }, { "shape": [ 2 ] }, { "shape": [ 2 ] } ], "outputs": [ { "shape": [ 2, 2, 1, 3 ] } ] },
				{ "inputs": [ { "shape": [ 2, 2, 2, 2 ] }, { "shape": [ 2 ] }, { "shape": [ 2 ] } ], "outputs": [ { "shape": [ 2, 2, 2, 2 ] } ] },
				{
					"inputs": [ { "shape": [ 2, 2, 4, 1, 3 ] }, { "shape": [ 2 ] }, { "shape": [ 2 ] } ], "outputs": [ { "shape": [ 2, 2, 4, 1, 3 ] } ],
					"runtimes": [
						{ "name": "NNXRuntimeHLSL" },
						{ "name": "NNERuntimeORTCpuEditor" },
						{ "name": "NNERuntimeORTDml", "skip": true, "comment": "Not supported" }
					]
				},
				{
					"inputs": [ { "shape": [ 2, 2, 4, 4 ] }, { "shape": [ 2 ] }, { "shape": [ 2 ] } ], "outputs": [ { "shape": [ 2, 2, 4, 4 ] } ],
					"runtimes": [
						{ "name": "NNXRuntimeHLSL" },
						{ "name": "NNERuntimeORTCpuEditor" },
						{ "name": "NNERuntimeORTDml" }
					]
				},
				{
					"inputs": [ { "shape": [ 2, 2, 8, 8 ] }, { "shape": [ 2 ] }, { "shape": [ 2 ] } ], "outputs": [ { "shape": [ 2, 2, 8, 8 ] } ],
					"runtimes": [
						{ "name": "NNXRuntimeHLSL" },
						{ "name": "NNERuntimeORTCpuEditor" },
						{ "name": "NNERuntimeORTDml" }
					]
				},
				{
					"inputs": [ { "shape": [ 2, 128, 8, 8 ] }, { "shape": [ 128 ] }, { "shape": [ 128 ] } ], "outputs": [ { "shape": [ 2, 128, 8, 8 ] } ],
					"runtimes": [
						{ "name": "NNXRuntimeHLSL" },
						{ "name": "NNERuntimeORTCpuEditor" },
						{ "name": "NNERuntimeORTDml" }
					]
				},
				{
					"inputs": [ { "shape": [ 128, 2, 8, 8 ] }, { "shape": [ 2 ] }, { "shape": [ 2 ] } ], "outputs": [ { "shape": [ 128, 2, 8, 8 ] } ],
					"runtimes": [
						{ "name": "NNXRuntimeHLSL" },
						{ "name": "NNERuntimeORTCpuEditor" },
						{ "name": "NNERuntimeORTDml" }
					]
				},
				{
					"inputs": [ { "shape": [ 64, 64, 8, 8 ] }, { "shape": [ 64 ] }, { "shape": [ 64 ] } ], "outputs": [ { "shape": [ 64, 64, 8, 8 ] } ],
					"runtimes": [
						{ "name": "NNXRuntimeHLSL" },
						{ "name": "NNERuntimeORTCpuEditor" },
						{ "name": "NNERuntimeORTDml" }
					]
				},
				{
					"inputs": [ { "shape": [ 2, 2, 45, 45 ] }, { "shape": [ 2 ] }, { "shape": [ 2 ] } ], "outputs": [ { "shape": [ 2, 2, 45, 45 ] } ],
					"runtimes": [
						{ "name": "NNXRuntimeHLSL" },
						{ "name": "NNERuntimeORTCpuEditor" },
						{ "name": "NNERuntimeORTDml" }
					]
				},
				{
					"inputs": [ { "shape": [ 1, 128, 56, 56 ] }, { "shape": [ 128 ] }, { "shape": [ 128 ] } ], "outputs": [ { "shape": [ 1, 128, 56, 56 ] } ],
					"runtimes": [
						{ "name": "NNXRuntimeHLSL" },
						{ "name": "NNERuntimeORTCpuEditor" },
						{ "name": "NNERuntimeORTDml" }
					],
					"comment": "from 'mosaic-9-sim.onnx'"
				}
			]
		}
	],

	"attribute_sets": [
		{
			"name": "Elementwise.LeakyRelu.AttributeTest",
			"attribute_maps": [
				{ "attributes": [ { "name": "alpha", "value": 0.1 } ] },
				{ "attributes": [ { "name": "alpha", "value": 0.5 } ] },
				{ "attributes": [ { "name": "alpha", "value": 1.0 } ] }
			]
		},
		{
			"name": "Gemm.TwoInputs.NoTranspose.Alpha",
			"attribute_maps": [
				{ "attributes": [ { "name": "alpha", "value": 0.0 } ] },
				{ "attributes": [ { "name": "alpha", "value": 0.5 } ] },
				{ "attributes": [ { "name": "alpha", "value": 1.0 } ] },
				{ "attributes": [ { "name": "alpha", "value": 5.0 } ] }
			]
		},
		{
			"name": "Gemm.ThreeInputs.NoTranspose.Beta",
			"multiply_with_attribute_sets": [ "Gemm.TwoInputs.NoTranspose.Alpha" ],
			"attribute_maps": [
				{ "attributes": [ { "name": "beta", "value": 0.0 } ] },
				{ "attributes": [ { "name": "beta", "value": 0.5 } ] },
				{ "attributes": [ { "name": "beta", "value": 1.0 } ] },
				{ "attributes": [ { "name": "beta", "value": 5.0 } ] }
			]
		},
		{
			"name": "Gemm.TwoInputs.NoTranspose",
			"attribute_maps": [
				{ "attributes": [ { "name": "transA", "value": 0, "type": "Int32" }, { "name": "transB", "value": 0, "type": "Int32" } ] }
			]
		},
		{
			"name": "Gemm.ThreeInputs.NoTranspose",
			"attribute_maps": [
				{ "attributes": [ { "name": "transA", "value": 0, "type": "Int32" }, { "name": "transB", "value": 0, "type": "Int32" } ] }
			]
		},
		{
			"name": "Gemm.TwoInputs.TransposedA",
			"attribute_maps": [
				{ "attributes": [ { "name": "transA", "value": 1, "type": "Int32" } ] }
			]
		},
		{
			"name": "Gemm.TwoInputs.TransposedB",
			"attribute_maps": [
				{ "attributes": [ { "name": "transB", "value": 1, "type": "Int32" } ] }
			]
		},
		{
			"name": "Gemm.TwoInputs.AllTransposed",
			"attribute_maps": [
				{ "attributes": [ { "name": "transA", "value": 1, "type": "Int32" }, { "name": "transB", "value": 1, "type": "Int32" } ] }
			]
		},
				{
			"name": "Gemm.ThreeInputs.TransposedA",
			"attribute_maps": [
				{ "attributes": [ { "name": "transA", "value": 1, "type": "Int32" } ] }
			]
		},
		{
			"name": "Gemm.ThreeInputs.TransposedB",
			"attribute_maps": [
				{ "attributes": [ { "name": "transB", "value": 1, "type": "Int32" } ] }
			]
		},
		{
			"name": "Gemm.ThreeInputs.AllTransposed",
			"attribute_maps": [
				{ "attributes": [ { "name": "transA", "value": 1, "type": "Int32" }, { "name": "transB", "value": 1, "type": "Int32" } ] }
			]
		},
		{
			"name": "Convolution.DefaultPadding",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "NOTSET", "type": "String" },
					{ "name": "dilations", "value": [ 1, 1 ], "type": "Int32Array" },
					{ "name": "group", "value": 1, "type": "Int32" },
					{ "name": "pads", "value": [ 1, 1, 1, 1 ], "type": "Int32Array" },
					{ "name": "strides", "value": [ 1, 1 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "Convolution.WithoutOrAutoPadding.WithoutPadding",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "NOTSET", "type": "String" },
					{ "name": "dilations", "value": [ 1, 1 ], "type": "Int32Array" },
					{ "name": "group", "value": 1, "type": "Int32" },
					{ "name": "pads", "value": [ 0, 0, 0, 0 ], "type": "Int32Array" },
					{ "name": "strides", "value": [ 1, 1 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "Convolution.WithoutOrAutoPadding.AutoPaddingAndStrides",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "SAME_LOWER", "type": "String" },
					{ "name": "dilations", "value": [ 1, 1 ], "type": "Int32Array" },
					{ "name": "group", "value": 1, "type": "Int32" },
					{ "name": "strides", "value": [ 2, 2 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "Convolution.WithStridesAndPadding",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "NOTSET", "type": "String" },
					{ "name": "dilations", "value": [ 1, 1 ], "type": "Int32Array" },
					{ "name": "group", "value": 1, "type": "Int32" },
					{ "name": "pads", "value": [ 1, 1, 1, 1 ], "type": "Int32Array" },
					{ "name": "strides", "value": [ 2, 2 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "Convolution.WithoutPaddingAndStrides",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "NOTSET", "type": "String" },
					{ "name": "dilations", "value": [ 1, 1 ], "type": "Int32Array" },
					{ "name": "group", "value": 1, "type": "Int32" },
					{ "name": "pads", "value": [ 0, 0, 0, 0 ], "type": "Int32Array" },
					{ "name": "strides", "value": [ 2, 2 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "Convolution.AsymmetricPaddingAndStrides",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "NOTSET", "type": "String" },
					{ "name": "dilations", "value": [ 1, 1 ], "type": "Int32Array" },
					{ "name": "group", "value": 1, "type": "Int32" },
					{ "name": "pads", "value": [ 1, 0, 1, 0 ], "type": "Int32Array" },
					{ "name": "strides", "value": [ 2, 2 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "Convolution.WithGroups",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "NOTSET", "type": "String" },
					{ "name": "dilations", "value": [ 1, 1 ], "type": "Int32Array" },
					{ "name": "group", "value": 3, "type": "Int32" },
					{ "name": "pads", "value": [ 1, 1, 1, 1 ], "type": "Int32Array" },
					{ "name": "strides", "value": [ 1, 1 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "Convolution.Large1",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "SAME_UPPER", "type": "String" },
					{ "name": "dilations", "value": [ 1, 1 ], "type": "Int32Array" },
					{ "name": "group", "value": 1, "type": "Int32" },
					{ "name": "strides", "value": [ 1, 1 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "Convolution.Large2",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "NOTSET", "type": "String" },
					{ "name": "dilations", "value": [ 2, 2 ], "type": "Int32Array" },
					{ "name": "group", "value": 1, "type": "Int32" },
					{ "name": "pads", "value": [ 0, 0, 0, 0 ], "type": "Int32Array" },
					{ "name": "strides", "value": [ 2, 2 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "ConvTranspose.Default",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "NOTSET", "type": "String" },
					{ "name": "dilations", "value": [ 1, 1 ], "type": "Int32Array" },
					{ "name": "group", "value": 1, "type": "Int32" },
					{ "name": "pads", "value": [ 0, 0, 0, 0 ], "type": "Int32Array" },
					{ "name": "strides", "value": [ 1, 1 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "ConvTranspose.1D",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "NOTSET", "type": "String" },
					{ "name": "dilations", "value": [ 1 ], "type": "Int32Array" },
					{ "name": "group", "value": 1, "type": "Int32" },
					{ "name": "pads", "value": [ 0, 0 ], "type": "Int32Array" },
					{ "name": "strides", "value": [ 1 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "ConvTranspose.3D",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "NOTSET", "type": "String" },
					{ "name": "dilations", "value": [ 1, 1, 1 ], "type": "Int32Array" },
					{ "name": "group", "value": 1, "type": "Int32" },
					{ "name": "pads", "value": [ 0, 0, 0, 0, 0, 0 ], "type": "Int32Array" },
					{ "name": "strides", "value": [ 1, 1, 1 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "ConvTranspose.Attributes",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "NOTSET", "type": "String" },
					{ "name": "dilations", "value": [ 1, 1 ], "type": "Int32Array" },
					{ "name": "group", "value": 1, "type": "Int32" },
					{ "name": "output_padding", "value": [ 1, 1 ], "type": "Int32Array" },
					{ "name": "pads", "value": [ 0, 0, 0, 0 ], "type": "Int32Array" },
					{ "name": "strides", "value": [ 3, 2 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "ConvTranspose.Autopad.SameLower",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "SAME_LOWER", "type": "String" },
					{ "name": "strides", "value": [ 2, 2 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "ConvTranspose.Autopad.SameUpper",
			"attribute_maps": [
				{ "attributes": [
					{ "name": "auto_pad", "value": "SAME_UPPER", "type": "String" },
					{ "name": "strides", "value": [ 2, 2 ], "type": "Int32Array"}
				] }
			]
		},
		{
			"name": "InstanceNormalization.Algorithms",
			"attribute_maps": [
				{ "attributes": [ { "name": "__UE__algorithm", "value": "Simple1x265", "type": "String" } ] },
				{ "attributes": [ { "name": "__UE__algorithm", "value": "SharedMemory8x32", "type": "String" } ] },
				{ "attributes": [ { "name": "__UE__algorithm", "value": "SharedMemory16x16", "type": "String" } ] },
				{ "attributes": [ { "name": "__UE__algorithm", "value": "SharedMemory32x8", "type": "String" } ] }
			]
		},
		{
			"name": "PadOp.ModeAttributeSet",
			"attribute_maps": [
				{ "attributes": [ { "name": "mode", "value": "constant", "type": "String" } ] },
				{ "attributes": [ { "name": "mode", "value": "reflect", "type": "String" } ] },
				{ "attributes": [ { "name": "mode", "value": "edge", "type": "String" } ] }
			]
		},
		{
			"name": "PadOp.Pad00Rank1",
			"multiply_with_attribute_sets": [ "PadOp.ModeAttributeSet" ],
			"attribute_maps": [
				{ "attributes": [
					{ "name": "value", "value": 1, "type": "float" },
					{ "name": "pads", "value": [ 0, 0 ], "type": "Int32Array" }
				] }
			]
		},
		{
			"name": "PadOp.Pad03Rank1",
			"multiply_with_attribute_sets": [ "PadOp.ModeAttributeSet" ],
			"attribute_maps": [
				{ "attributes": [
					{ "name": "value", "value": 2, "type": "float" },
					{ "name": "pads", "value": [ 0, 3 ], "type": "Int32Array" }
				] }
			]
		},
		{
			"name": "PadOp.Pad20Rank1",
			"multiply_with_attribute_sets": [ "PadOp.ModeAttributeSet" ],
			"attribute_maps": [
				{ "attributes": [
					{ "name": "value", "value": 3, "type": "float" },
					{ "name": "pads", "value": [ 2, 0 ], "type": "Int32Array" }
				] }
			]
		},
		{
			"name": "PadOp.Pad41Rank1",
			"multiply_with_attribute_sets": [ "PadOp.ModeAttributeSet" ],
			"attribute_maps": [
				{ "attributes": [
					{ "name": "pads", "value": [ 4, 1 ], "type": "Int32Array" }
				] }
			]
		},
		{
			"name": "PadOp.Pad00_10_12_34_Rank4",
			"multiply_with_attribute_sets": [ "PadOp.ModeAttributeSet" ],
			"attribute_maps": [
				{ "attributes": [
					{ "name": "pads", "value": [ 0, 1, 1, 3, 0, 0, 2, 4 ], "type": "Int32Array" }
				] }
			]
		}
	]

}
