
/*********************************************************************************
 *							Niagara Vertex Factory data access
 *********************************************************************************/

//Currently we have no integer data being fed into the renderers.
//Buffer<int> NiagaraParticleDataInt;
//uint NiagaraIntDataOffset;
//uint NiagaraIntDataStride;


float GetFloat(int RegisterIdx, uint InstanceID)
{
	// this was originally: bool IsHalf = RegisterIdx & (1 << 31);
	// but the glsl comes out as -2147483648 and this appears to be upsetting some old android glsl compilers. Doing this forces an
	// unsigned 2147483648u literal into glsl. FORT-286011.
	uint HalfBit = (1 << 31);
	bool IsHalf = RegisterIdx & HalfBit;

	RegisterIdx &= (~(1 << 31));

	if(IsHalf)
	{
		return NiagaraVFLooseParameters.NiagaraParticleDataHalf[(RegisterIdx * NiagaraVFLooseParameters.NiagaraFloatDataStride + InstanceID)];
	}
	else
	{
		return NiagaraVFLooseParameters.NiagaraParticleDataFloat[(RegisterIdx * NiagaraVFLooseParameters.NiagaraFloatDataStride + InstanceID)];
	}
}

float2 GetVec2(int RegisterIndex, uint InstanceID)
{
	return float2(GetFloat(RegisterIndex, InstanceID), GetFloat(RegisterIndex+1, InstanceID));
}

float3 GetVec3(int RegisterIndex, uint InstanceID)
{
	return float3(GetFloat(RegisterIndex, InstanceID), GetFloat(RegisterIndex+1, InstanceID), GetFloat(RegisterIndex+2, InstanceID));
}

float4 GetVec4(int RegisterIndex, uint InstanceID)
{
	return float4(GetFloat(RegisterIndex, InstanceID), GetFloat(RegisterIndex+1, InstanceID), GetFloat(RegisterIndex+2, InstanceID), GetFloat(RegisterIndex+3, InstanceID));
}

