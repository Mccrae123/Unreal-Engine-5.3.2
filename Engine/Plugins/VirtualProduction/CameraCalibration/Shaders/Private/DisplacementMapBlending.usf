// Copyright Epic Games, Inc. All Rights Reserved.

/*=============================================================================
	DistortionSTMapProcessor.usf
=============================================================================*/

#include "/Engine/Private/Common.ush"

float BlendFactor;
float MainCoefficient;
float DeltaMinX;
float DeltaMaxX;
float DeltaMinY;
float DeltaMaxY;
float2 FxFyScale;
float2 PrincipalPoint;
uint2 OutputTextureExtent;
Texture2D SourceTextureOne;
Texture2D SourceTextureTwo;
Texture2D SourceTextureThree;
Texture2D SourceTextureFour;
SamplerState SourceTextureSampler;


void BlendPS(float4 SvPosition : SV_POSITION, out float4 OutColor : SV_Target0)
{
	float2 UV = SvPosition.xy / OutputTextureExtent.xy;
	UV = ((UV - 0.5f) * FxFyScale) + 0.5f;

	float4 TexOneColor = Texture2DSampleLevel(SourceTextureOne, SourceTextureSampler, UV, 0);
	float4 BlendedColor;

#if BLEND_TYPE == 1
	
	float4 TexTwoColor = Texture2DSampleLevel(SourceTextureTwo, SourceTextureSampler, UV, 0);
	BlendedColor = lerp(TexOneColor, TexTwoColor, BlendFactor);
	
#elif BLEND_TYPE == 2

	float4 TexTwoColor = Texture2DSampleLevel(SourceTextureTwo, SourceTextureSampler, UV, 0);
	float4 TexThreeColor = Texture2DSampleLevel(SourceTextureThree, SourceTextureSampler, UV, 0);
	float4 TexFourColor = Texture2DSampleLevel(SourceTextureFour, SourceTextureSampler, UV, 0);

	BlendedColor = MainCoefficient * (TexOneColor * DeltaMaxX * DeltaMaxY + TexTwoColor * DeltaMaxX * DeltaMinY + TexThreeColor * DeltaMinX * DeltaMaxY + TexFourColor * DeltaMinX * DeltaMinY);

#else
	
	BlendedColor = TexOneColor;

#endif
	
	float2 CenterShift = PrincipalPoint - float2(0.5f, 0.5f);
	OutColor = BlendedColor + float4(CenterShift.xy, CenterShift.xy);
}
