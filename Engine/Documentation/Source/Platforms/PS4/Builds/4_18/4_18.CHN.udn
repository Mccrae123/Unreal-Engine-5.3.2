INTSourceChangelist:6517938
Availability:Licensee
Crumbs: 
Title:面向4.18的PlayStation 4版本说明
Description:面向虚幻引擎4.18的PlayStation 4版本说明。
Type: 
Version: 4.18
Parent: Platforms/PS4/Builds
Platform:PS4
Order: 18
Tags: Release Notes
Tags: PS4


**构建信息**：[](https://udn.unrealengine.com/questions/398207/unreal-engine-4180-release.html)

**一般发行声明**：[https://docs.unrealengine.com/en-US/Support/Builds/ReleaseNotes/4_18](Support/Builds/ReleaseNotes/4_18)

SDK：

*   4.508.111
*   固件版本4.730.001
*   支持的IDE：Visual Studio 2015和Visual Studio 2013

## 主要功能

### PS4 SDK 4.508.111支持

该SDK在基本PS4上支持额外的128MB内存，在PS4 Pro上支持额外的256MB。目前，所有这些额外内存都转至CPU。但是，如果需要，可以将更多内存分配到其他池。例如，要为Garlic分配更多内存，项目可以相应地修改r.GarlicHeapSizeMB和r.GarlicHeapSizeMB_Neo。

### PS4内存改进（需要配置更改）

#### 物理内存统计信息

平台物理内存统计信息已经修改，现在会考虑garlic和onion分配。因此项目会看到该数值增大，但是数值不准确。

#### 纹理流送池

我们还修改了流送纹理内存在PS4上的分配方式，以提高可预测性。但是，受许可方如果想要利用这一点，则需要将r.PS4UseLegacyTexturePool更改为0。

在传统模式下，当启用GPU磁盘碎片整理分配器时，纹理流送器预算由GPU磁盘碎片整理分配器所分配的总字节数驱动。这包括所有可进行磁盘碎片整理但不属于可流送纹理的资源。因此，r.Streaming.PoolSize CVar必须增大才能考虑进去。

在这种新行为下，纹理池为固定大小，仅计入由纹理流送器管理的可流送纹理资源。这样就能够更多地控制实际纹理流送预算。启用这种新行为时，纹理流送池大小很可能需要减小。

### 特定于Neo的Garlic和Onion池大小

现在可以为Neo指定不同的Garlic和Onion池大小。Neo设备比Base设备内存更多，因此如果您的项目使用特定于Neo的可伸缩性设置，并且这些设置会影响图形资源（例如，更大的阴影贴图分辨率，4K输出或更大的位深度渲染目标），则Neo上更有利于分配更多图形内存，尤其是向Garlic池分配。

特定于Neo的池大小可以在PS4Engine.ini中使用以下配置文件设置进行设置（其中“n”表示兆字节数）：

*   \[SystemSettings\]
*   r.GarlicHeapSizeMB_Neo=n
*   r.OnionHeapSizeMB_Neo=n

默认值0表示Neo设备将使用与Base设备相同的池大小。

### 新增内容：Low Level Memory（LLM）跟踪程序

新的Low Level Memory（LLM）跟踪程序使您能够 **跟踪所有内存一次，且只能跟踪一次**，不会错过任何内容，也不会重复计算！

![](48_2-1.png "48_2-1.png")

引擎或游戏进行的每次分配都会指定有一个标记值，用于标识它所属的类别。所有类别加总最多等于游戏所用的内存总量。标记使用标记范围宏应用。在该范围内进行的任何分配都将会分配有指定标记。

LLM统计信息可以在游戏中使用“stat LLM”或“stat LLMFULL”查看。每个标记的当前总计将以MB为单位显示。LLM还将统计值写出到csv，以便制作值的时间图表。

LLM的性质要求为每个平台添加支持。当前LLM支持PS4。Windows作为试验性版本受到支持。

### 新增内容：Media Framework改进

4.18中的Media Framework已经大幅更新和扩展，支持即将推出的高级用例，例如 **实时视频合成**、时间同步、简化工作流程、捕获硬件和基于IP的视频支持、在线流媒体、与虚幻编辑器集成并提高了稳定和性能！

[OBJECT:EmbeddedVideo]
    [PARAMLITERAL:videoid]
    sVXRyzoppD0
    [/PARAMLITERAL]
    [PARAMLITERAL:width]
    78
    [/PARAMLITERAL]
    [PARAMLITERAL:height]
    56.25
    [/PARAMLITERAL]
    [PARAMLITERAL:units]
    %
    [/PARAMLITERAL]
    [PARAMLITERAL:type]
    simple
    [/PARAMLITERAL]
[/OBJECT]

Media Framework API已经简化，缩短了编译时间，并更新为利用C++11中的现代化功能。此外，高级媒体播放器逻辑已经从基于推送的范例重构为基于拉取的方法，并移入可重复使用的引擎不可知类，从而更好地在媒体播放器界面中实现关注点分离。  

延迟和性能进行了改进，因为采用了基于时间码的样本处理管道，对时间敏感型样本（如音频、摄像头跟踪和面部跟踪）使用高频tick，并使用了可以被任何对象使用的多阶段tick，从而改善帧利用和可预测时间。

音频重放现在集成了混音器API，利用新的媒体声音组件（取代了媒体声波），这些组件是基于Synth组件构建的，它们可以连接到关卡Actor并在UMG控件中使用。媒体样本速率转换器（之前仅支持44.1kHz时16位）现在支持int8、int16、int32、浮点数、双精度输入样本和任何样本速率（包括可变速率），最多支持8个音频输入通道以及1个和2个输出通道（计划在4.19中推出环绕声）。通过Actor上的媒体声音组件还支持空间音频。

视频方面，Media Framework现在使用外部纹理取样器API，它在不使用内存拷贝的情况下支持视频帧渲染。目前仅针对安卓系统实现，但我们计划扩展到其他平台。我们将有问题的三重缓冲机制替换为样本队列，并为外来视频和像素格式以及有问题的编码器增加了更好的支持。

媒体播放器编辑器中已经更新了新的轨道格式选择器菜单、音频/视频捕捉设备选择器、缓存状态可视化（针对支持它的播放器插件）、播放列表控制并能够保存播放列表。此外，前后拉动现在的响应能力增强，信息覆层已经改进。此外，对文本覆层可视化和360视频视口控制提供了试验性支持。针对媒体源资源的按平台媒体播放器覆盖现在也可使用。

添加了用于查询媒体播放器轨道和轨道格式、列举音频、视频和网络摄像头采集视频、以及向媒体播放列表添加文件和URL的蓝图功能。

所有媒体播放器插件已经更新，能够支持所有虚幻引擎4.18中的Media Framework提供的所有令人激动的新功能。

[REGION:note]
部分工作，例如Sequencer集成、立体和360度视频支持、硬件加速4K重放仍在积极开发当中。
[/REGION]

### 升级声明（Media Framework）

*   终止支持：MediaSoundWave资源替换为MediaSoundComponents
    *   没有自动转换（组件需要不同的工作流程和用户决策）
    *   将新的MediaSoundComponents连接到Actor或UMG控件
    *   现有的MediaSoundWave资源必须从磁盘上的Content目录中删除
*   终止支持：MediaPlayer输出设置已被移除。媒体资源现在引用MediaPlayer
*   新增：MediaTexture和MediaSoundComponent有一个从中拉取数据的媒体播放器设置
*   新增：从PS4上移除了通过操作系统混合器进行可选音频重放
    *   在大多数平台上，重放现在可以通过引擎处理
    *   在4.19中将Startup Movies替换为MF时，或许会重新添加这个功能
*   新增：现在始终会加载MediaAssets模块来防止服务器端BP问题
*   新增：材质纹理取样器现在需要新的取样器类型“外部”
*   注：现已移除作为概念的MediaOverlay资源
    *   我们目前正在修改UE4中的字幕支持

### 新功能和改进（Media Framework）

#### 一般内容

##### API

*   新增：将高级媒体播放器逻辑移到可重用引擎不可知类
    *   低级接口通过外观公开（请参阅FMediaPlayerFacade）
    *   用于创建、缓存和使用样本的可重用助手对象
*   新增：每个媒体轨道支持多输出格式（请参阅IMediaTracks）
*   新增：用于查询玩家缓存状态的API（IMediaCache）
*   新增：用于列举A/V捕捉设备的API（IMediaCaptureSupport）
*   新增：时间源API（用于内部和外部时钟/时间码生成器）
*   新增：公开缓存和连接状态
*   新增：将媒体覆层拆分成说明文字、字母和自定义文本轨道
*   新增：在大多数玩家插件中添加了详细的日志记录
    *   要启用该功能，将以下内容添加到项目的\\Config\\DefaultEngine.ini文件——将以下内容添加到\[Core.Log\]分段：
    *   LogMediaAssets=VeryVerbose
    *   LogMediaUtils=VeryVerbose
    *   LogAndroidMedia=VeryVerbose
    *   LogAvfMedia=VeryVerbose
    *   LogImgMedia=VeryVerbose
    *   LogPS4Media=VeryVerbose
    *   LogWmfMedia=VeryVerbose
*   在媒体播放器界面中更好地分离关注点
*   委托替换为线程安全接口
*   将基于推送重构为基于拉取API（请参阅IMediaSamples）
*   大多数操作现在是异步的，消除卡顿
*   多个媒体资源现在可以使用同一个MediaPlayer
*   现代化所有媒体相关的模块（IWYU、C++11、文档）

##### 延迟和性能

*   新增内容：多阶段tick API
    *   可以供任何对象使用，而不仅仅是媒体播放器（请参阅IMediaClockSink）
    *   改善帧利用和可预测时间
*   新增：基于时间码的样本处理管道
*   新增：针对时间敏感型样本的高频（200 Hz）ticker，如音频、摄像头跟踪和面部跟踪（请参阅IMediaTicker和IMediaTickable）
*   新增：样本队列和池化，改善内存利用
*   新增：通用C++模板，用于媒体对象池化（请参阅TMediaObjectPool）
*   新增：字符串转换函数，用于媒体列举（请参阅MediaHelpers.h）
*   Media Framework现在大多数是无锁的，以消除线程停滞
*   移除了所有渲染线程清空和渲染线程依赖性
*   修复了重新创建渲染设备时（即更改分辨率时）的媒体纹理崩溃
*   修复了所有已知的多线程和并发性问题

##### 音频

*	通过引擎的音频重放
*   新增：与新的混音器API集成
*   新增：媒体声音组件（取代了媒体声波）
    *   基于合成组件构建
    *   可以连接到关卡Actor
    *   可以在UMG控件中使用
*   新增：媒体采样率转换器（先前仅支持44.1kHz时16位）
    *   支持int8、int16、int32、浮点、双精度输入样本
    *   支持任何采样率，包括可变速度
    *   最高支持8个音频输入通道
    *   支持1和2个输出通道（计划在4.19中推出环绕声）
*   新增：通过Actor上的媒体声音组件还支持空间音频

##### 视频

##### API

*   新增：外部纹理取样器API
    
    *   在不使用内存拷贝的情况下支持视频帧渲染
    
    *   目前仅针对安卓系统实现
*   新增：用于360和立体声视频播放器的API（请参阅IMediaView）  
    *   目前不在任何玩家插件中实现

*   延迟和性能

*   将有问题的三重缓冲机制替换为样本队列
*   改善对外部视频和像素格式以及有问题编码器的支持

##### 编辑器

*   媒体播放器编辑器
    *   新增：跟踪格式选择器菜单
    *   新增：音频/视频采集设备选择器
    *   新增：缓存状态可视化（对于支持它的玩家插件）
    *   新增：播放列表控制并能够保存播放列表（播放列表编辑仍WIP）
    *   试验性：文本覆层可视化（当前不使用）
    *   试验性：360视频视口控制（目前不使用）
    *   前后拉动现在的响应能力增强
    *   信息覆层已经改进

##### 蓝图

*   新增：用于查询媒体播放器轨道和轨道格式的BP函数
*   新增：用于列举音频、视频和网络摄像头采集设备的BP函数库
*   新增：用于SeekCompleted和TracksChanged的BP事件
*   新增：用于向媒体播放列表添加文件和URL的BP函数

##### 媒体播放器插件

##### PS4Media

*   功能
    *   完全从头重新编写
    *   新增：支持流媒体（SDK目前仅限于一个流）
    *   新增：支持M3D、M4A、M4V、MOV容器
    *   新增：轨道切换支持

##### 性能

*   新增：异步文件加载
*   新增：使用SDK 3.50异步AvPlayer API
*   新增：可配置视频缓冲设置
*   移除了渲染线程清空，防止卡顿

## 版本说明

### 音频

*   新增内容：已重新构建空间化、混响和遮挡插件支持。现在按平台混合和匹配插件。音频插件现在也可以换出，而不必关闭编辑器。
*   Audio3D空间化插件现在可以在引擎插件中使用。要使用它，将PS4的空间化插件设置为“Sony Audio3D”。
*   错误修复：修复了声源在PS4上的同一帧处开始和停止时可能发生的内存泄漏。
*   错误修复：若干修复，将《堡垒之夜》中的PS4音频集成到Dev-AnimPhys

### 平台 

*   集成新的开始/结束UpdateTexture3D接口以通过移除临时副本减少PS4上的内存使用峰值现象。节省了使用DFAO时200MB以上的峰值内存用量。
*   在PS4上将着色器的最大边界资源计数增加到48。
    *   添加了PS4商店产品信息的更多日志记录
    *   添加了选项，用于指定在哪个底部位置显示PS4商店图标，默认为之前的硬编码值“左侧”
*   现在遵从存在Web API函数的调用速率。虽然会超过速率限制，但尝试使用存在API将被忽略，并记录警告。
    *   启动时为PSN添加了初始化日志记录。
*   添加了r.GarlicHeapSizeMB\_Neo和r.OnionHeapSizeMB\_Neo以允许在Base和Neo PS4上指定不同的内存堆大小。
*   错误修复：在UAV的RHITransitionResources中添加了缺少的K$清空。- UAV缓冲类型的恒定索引读取编译为标量加载。标量加载通过K$进行。- 没有K$清空，着色器会读取过时缓存数据。
*   错误修复：修复动态模糊错误。- VelocityFlatten计算着色器之前会因为零长度速度而输出NaNs。- 现在，在计算速度极坐标时，NaNs将会归零。
*   错误修复：修复了PS4保存游戏图标。保存游戏系统现在从扩展保存游戏信息回调抓取相对路径，例如“../../../GameName/Content/Icons/savicon.png”。图标文件应当包含在游戏的内容目录中，并作为非UFS文件封装。
*   错误修复：PSVR HMD现在调用sceUserServiceInitialize。
*   错误修复：在启用Morpheus的情况下启动至PS4时，编辑器因为着色器编译失败而崩溃。
    *   修复了着色器，包含能够将它们放入平台特定子目录的新功能。
*   错误修复：修复了PS4内存统计——物理内存统计现在包含garlic和onion分配。CPU内存不足崩溃会导致“AvailablePhysical”接近于0。- 向内存统计结构添加了garlic、onion和defrag统计。- 向平台内存统计添加了固定池大小。
*   错误修复：修复了PS4内存系统上的4 GB CPU内存限制。这会影响“LARGE”内存模式下的Neo开发设备，其中有超过4GB的内存供CPU使用。
*   错误修复：修复了PS4上的内存不足崩溃，允许mspace堆耗尽时libc分配器使用引擎malloc。
*   错误修复：统一了PS4媒体播放器内存分配器，修复启动影片播放器中的内存不足崩溃。
*   错误修复：PS4现在正确清除体积纹理。
*   OnlineSubsystemPS4（OSS）
    *   错误修复：修复了在PS4 OSS消息接口中查询了用户两次时的崩溃
    *   错误修复：将PS4朋友存在状态中的文本处理为UTF-8，而不是ANSI
    *   错误修复：PS4 OSS身份接口中的GetUserPrivilege函数现在将正确报告用户未登录，而不是一般失败。
    *   错误修复：解析html换行标记并忽略PS4提供描述中的新行/回车字符
    *   错误修复：修复了用户注销后重新登录时，PS4 OSS中的崩溃。
    *   错误修复：修复了兼容项目ID之间的会话连接性。
    *   错误修复：修复了发送朋友会话邀请时的PS4端崩溃。
*   错误修复：修复了PS4纹理池行为，减少浪费的Garlic内存。在启用该新行为时，受许可方需要调整它们的纹理池预算。请参阅PS4 4.18发行声明。
*   错误修复：修复了因为编译器优化导致损坏的自动化测试。
*	错误修复：修复了撇号键被误报为“引号”的问题，这会导致游戏调试器中断，因为它侦听“撇号”键后会激活。  

### 渲染  

### 照明

*   调低了默认的Epic阴影设置的r.Shadow.RadiusThreshold，因为它会导致小对象弹出的大量可见瑕疵。这会稍微增加阴影贴图成本（在PS4上《堡垒之夜》中13.5ms RT -> 14.3ms RT，不可测量GPU差异）。错误修复：修复了PS4上全局距离场中的地形

### VR 

*   错误修复：修复了Windows上的潜在崩溃，当禁用了Morpheus插件时会意外轮询PS4 VR远程客户端代码。

## 升级说明  

*   错误修复：当指定会话为空时，修复了在FOnlineSessionPS4::SendSessionInviteToFriends中发送朋友邀请时的崩溃。似乎当领导者网络连接短暂断开，而另一位成员成为领导者时会发生这种情况。可能还存在其他情况。 
*   错误修复：确保所有PS4商店产品正确使用html BR标记，而不是新行，否则它们无法正常显示。
